{
    "schema": [
        {
            "name": "mAdminState", 
            "default": "enabled", 
            "type": {
                "href": "/mgmt/types/default/dmAdminState"
            }, 
            "summary": "Set the administrative state of this configuration.", 
            "/mgmt/types/default/dmAdminState": {
                "type": {
                    "cli-arg": "enabled | disabled", 
                    "name": "dmAdminState", 
                    "value-list": {
                        "value": [
                            {
                                "name": "enabled", 
                                "display": "enabled"
                            }, 
                            {
                                "name": "disabled", 
                                "display": "disabled"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmAdminState"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmAdminState"
                    }
                }
            }, 
            "label": "Enable administrative state", 
            "cli-alias": "admin-state", 
            "display": "Administrative state", 
            "hoverhelp": "&lt;p>Set the administrative state of the configuration.&lt;/p>&lt;ul>&lt;li>To make active, set the check box.&lt;/li>&lt;li>To make inactive, clear the check box.&lt;/li>&lt;/ul>", 
            "description": "&lt;p>The administrative state of the configuration.&lt;/p>&lt;ul>&lt;li>To make active, set to enabled.&lt;/li>&lt;li>To make inactive, set to disabled.&lt;/li>&lt;/ul>"
        }, 
        {
            "/mgmt/types/default/dmString": {
                "type": {
                    "cli-arg": "string", 
                    "name": "dmString"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                }
            }, 
            "name": "UserSummary", 
            "cli-alias": "summary", 
            "summary": "Brief summary for user annotation.", 
            "type": {
                "href": "/mgmt/types/default/dmString"
            }, 
            "display": "Comments"
        }, 
        {
            "/mgmt/types/default/dmB2BProfileType": {
                "type": {
                    "name": "dmB2BProfileType", 
                    "value-list": {
                        "value": [
                            {
                                "summary": "Internal partner", 
                                "display": "Internal", 
                                "name": "internal", 
                                "description": "Sets the partner as an internal partner. An internal partner receives inbound documents from the B2B Gateway and sends outbound documents to the B2B Gateway. An internal partner is a trading partner, probably in the same company, that implements some B2B processing logic and exchanges messages with the B2B Gateway with HTTP, IBM MQ, or some other non-AS protocol."
                            }, 
                            {
                                "summary": "External partner", 
                                "display": "External", 
                                "name": "external", 
                                "description": "Sets the partner as an external partner. An external partner is a trading partner, usually in a separate company, that sends inbound documents to the B2B Gateway and receives outbound documents from the B2B Gateway using one of the supported B2B protocols."
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmB2BProfileType"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmB2BProfileType"
                    }
                }
            }, 
            "name": "ProfileType", 
            "default": "internal", 
            "type": {
                "href": "/mgmt/types/default/dmB2BProfileType"
            }, 
            "summary": "Type of trading partner", 
            "cli-alias": "profile-type", 
            "display": "Profile type", 
            "description": "Whether the profile is for an internal or external partner. The default value is internal."
        }, 
        {
            "/mgmt/types/default/dmString": {
                "type": {
                    "cli-arg": "string", 
                    "name": "dmString"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                }
            }, 
            "maximum-length": 128, 
            "type": {
                "href": "/mgmt/types/default/dmString"
            }, 
            "description": "&lt;p>Specifies the identifier for the partner. When configuring a trading partner, its identifier (ID) must be unique within a specific B2B Gateway configuration. The identifiers for the trading partner should be equivalent to one of the following values.&lt;/p>&lt;ul>&lt;li>In AS messages, a value for an &lt;tt>AS*-From&lt;/tt> or &lt;tt>AS*-To&lt;/tt> header, where * is 1, 2, or 3.&lt;/li>&lt;li>In ebMS messages, a value for an &lt;tt>PartyID&lt;/tt> element, where the PartyID element can be under either From or To element.&lt;/li>&lt;li>In none of above, a value that is extracted from the body of the EDI message: &lt;tt>SenderID&lt;/tt> or &lt;tt>ReceiverID&lt;/tt> .&lt;/li>&lt;/ul>", 
            "summary": "Identifiers for the partner", 
            "array": "true", 
            "cli-alias": "business-id", 
            "display": "Partner business IDs", 
            "name": "BusinessIDs"
        }, 
        {
            "/mgmt/types/default/dmString": {
                "type": {
                    "cli-arg": "string", 
                    "name": "dmString"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                }
            }, 
            "name": "BusinessIDsDUNS", 
            "cli-alias": "business-id-duns", 
            "summary": "Identifiers for the partner by DUNS Number", 
            "type": {
                "href": "/mgmt/types/default/dmString"
            }, 
            "array": "true", 
            "valid-regexp": "^[0-9]{9}$", 
            "display": "Partner business IDs (DUNS)", 
            "description": "Specifies the 9-digit D-U-N-S (Data Universal Numbering System) identification number for the partner. When configuring a trading partner, the identifier (ID) should be unique not only within the 3 types of ID System (Freeform, DUNS, and DUNS+4) but also within a specific B2B Gateway configuration."
        }, 
        {
            "/mgmt/types/default/dmString": {
                "type": {
                    "cli-arg": "string", 
                    "name": "dmString"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                }
            }, 
            "name": "BusinessIDsDUNSPlus4", 
            "cli-alias": "business-id-duns4", 
            "summary": "Identifiers for the partner by DUNS+4 Number", 
            "type": {
                "href": "/mgmt/types/default/dmString"
            }, 
            "array": "true", 
            "valid-regexp": "^[0-9]{13}$", 
            "display": "Partner business IDs (DUNS+4)", 
            "description": "Specifies the 13-digit D-U-N-S (Data Universal Numbering System + 4) identification number for the partner. When configuring a trading partner, the identifier (ID) should be unique not only within the 3 types of ID System (Freeform, DUNS, and DUNS+4) but also within a specific B2B Gateway configuration."
        }, 
        {
            "description": "Select a Document Processing Policy that controls processing actions against submitted messages.", 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/StylePolicy"
                }
            }, 
            "summary": "Customer processing policy", 
            "cli-alias": "stylepolicy", 
            "display": "Processing policy", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "name": "CustomStylePolicy"
        }, 
        {
            "/mgmt/types/default/dmXMLReqRespType1": {
                "type": {
                    "summary": "XML Firewall Request-Response Type", 
                    "display": "XML Firewall Request-Response Type", 
                    "value-list": {
                        "value": [
                            {
                                "display": "SOAP", 
                                "name": "soap", 
                                "description": "The traffic is XML formatted in accordance with the SOAP schema standards. The service validates the message against SOAP schemas that are currently in use."
                            }, 
                            {
                                "display": "XML", 
                                "name": "xml", 
                                "description": "The traffic is formatted in XML. The service validates the message against XML schemas that are currently in use."
                            }, 
                            {
                                "display": "Pass through", 
                                "name": "unprocessed", 
                                "description": "The traffic is passed unaltered."
                            }, 
                            {
                                "display": "Non-XML", 
                                "name": "preprocessed", 
                                "description": "The traffic can be any format. However, for traffic that is flat file text or binary, you must use this option. The service passes the contents of the message unaltered. Document processing will not operate directly on the message content, but actions that authenticate and authorize access, set a destination, or attach variables to the context can be performed."
                            }
                        ]
                    }, 
                    "name": "dmXMLReqRespType1"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmXMLReqRespType1"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmXMLReqRespType1"
                    }
                }
            }, 
            "name": "ResponseType", 
            "default": "preprocessed", 
            "type": {
                "href": "/mgmt/types/default/dmXMLReqRespType1"
            }, 
            "summary": "Characterize response traffic", 
            "cli-alias": "response-type", 
            "display": "Response traffic type", 
            "description": "Characterizes the traffic that originates from 'To' partner. For inbound transaction, this is the traffic type that originates from internal partner. For outbound transaction, this is the traffic type that originates from external partner. The default value is Non-XML."
        }, 
        {
            "/mgmt/types/default/dmString": {
                "type": {
                    "cli-arg": "string", 
                    "name": "dmString"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                }
            }, 
            "maximum-length": 128, 
            "type": {
                "href": "/mgmt/types/default/dmString"
            }, 
            "description": "The identifier (e-mail address) for the partner. When configuring a trading partner, its e-mail address must be unique within a specific B2B Gateway configuration. The e-mail addresses for the trading partner should be equivalent to one of the following values: &lt;ul>&lt;li>In AS1 messages, a value for a &lt;tt>From&lt;/tt> or &lt;tt>To&lt;/tt> header&lt;/li>&lt;li>In non-AS1 messages, a value that is extracted from the body of the EDI message: &lt;tt>SenderID&lt;/tt> or &lt;tt>ReceiverID&lt;/tt> .&lt;/li>&lt;/ul>", 
            "summary": "E-mail addresses for the partner in AS1 To or From headers", 
            "array": "true", 
            "cli-alias": "email-address", 
            "display": "Partner E-mail addresses", 
            "name": "EmailAddresses"
        }, 
        {
            "name": "Destinations", 
            "type": {
                "href": "/mgmt/types/default/dmB2BDestination"
            }, 
            "required": "true", 
            "summary": "Destinations", 
            "/mgmt/types/default/dmB2BDestination": {
                "type": {
                    "property-group": [
                        {
                            "member": [
                                "", 
                                "", 
                                ""
                            ], 
                            "name": "summary", 
                            "display": "Summary"
                        }, 
                        {
                            "member": [
                                "", 
                                ""
                            ], 
                            "name": "destination", 
                            "display": "Destinations"
                        }, 
                        {
                            "member": [
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "name": "connection", 
                            "display": "Connection"
                        }, 
                        {
                            "member": [
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "name": "as_crypto", 
                            "display": "AS Outbound Security"
                        }, 
                        {
                            "member": [
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "name": "as_attributes", 
                            "display": "Advanced AS Behavior"
                        }, 
                        {
                            "member": [
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "name": "ftp_settings", 
                            "display": "Advanced AS3/FTP Settings"
                        }, 
                        {
                            "member": [
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "name": "EBMSDestAttributes", 
                            "display": "Advanced ebMS2 Settings"
                        }, 
                        {
                            "member": [
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "name": "EBMSDestSecurity", 
                            "display": "ebMS Outbound Security"
                        }, 
                        {
                            "member": [
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "name": "EBMSDestReliableMessaging", 
                            "display": "ebMS Reliable Messaging"
                        }, 
                        {
                            "member": "", 
                            "name": "EBMSAdvancedFeature", 
                            "display": "ebMS Advanced Feature"
                        }
                    ], 
                    "name": "dmB2BDestination", 
                    "properties": {
                        "property": [
                            {
                                "maximum-length": 128, 
                                "valid-regexp": "^[_a-zA-Z0-9.-]+$", 
                                "description": "Specify the name to identify this destination in the profile.", 
                                "required": "true", 
                                "summary": "Name to identify the destination", 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "cli-alias": "name", 
                                "display": "Destination name", 
                                "name": "DestName"
                            }, 
                            {
                                "name": "DestURL", 
                                "cli-alias": "dest-url", 
                                "required": "true", 
                                "locations": {
                                    "location": "\"NONE\""
                                }, 
                                "summary": "URL for the destination", 
                                "subtype": "dmAllURLProtocol", 
                                "type": {
                                    "href": "/mgmt/types/default/dmURL"
                                }, 
                                "display": "Destination URL", 
                                "protocols": {
                                    "protocol": [
                                        "dpmq", 
                                        "dpmqfte", 
                                        "mq", 
                                        "mqfte", 
                                        "dptibems", 
                                        "tibems", 
                                        "dpwasjms", 
                                        "ftp", 
                                        "sftp", 
                                        "dpnfs", 
                                        "http", 
                                        "https", 
                                        "dpims", 
                                        "dpimsssl", 
                                        "dpsmtp", 
                                        "as1", 
                                        "as2", 
                                        "as2s", 
                                        "as3", 
                                        "ebms2", 
                                        "ebms2s", 
                                        "ebms3", 
                                        "ebms3s"
                                    ]
                                }, 
                                "description": "&lt;p>Specify the URL for the destination. The URL is parsed to determine the protocol to use. To use a load balancer, specify the name of an existing Load Balancer Group instead of the address-port pair in the URL. &lt;ul>&lt;li>If the URL starts with as1:// or dpsmtp://, the service uses the ESMTP protocol. These protocols require an SMTP server connection and e-mail address. Specify the URL in either of the following formats: &lt;ul>&lt;li>&lt;tt>as1://mailExchange[:port][/queryParameters]&lt;/tt>&lt;/li>&lt;li>&lt;tt>dpsmtp://mailExchange[:port][/queryParameters]&lt;/tt>&lt;/li>&lt;/ul>&lt;/li>&lt;li>If the URL starts with as2://, ebms2://, ebms3://, or http://, the service uses the HTTP protocol. The syntax for the URL is in the format of &lt;tt>hostname:port/uri&lt;/tt> .&lt;/li>&lt;li>If the URL starts with as2s://, ebms2s://, ebms3s://, or https://, the service uses the HTTPS protocol. The syntax for the URL is in the format of &lt;tt>hostname:port/uri&lt;/tt> .&lt;/li>&lt;li>If the URL starts with as3:// or ftp://, the service uses the FTP protocol. &lt;ul>&lt;li>For an absolute path to the root directory, specify the URL in the format of &lt;tt>ftp://user:password@host/%2Fpath&lt;/tt> . %2F is the URL encoding of a forward slash.&lt;/li>&lt;li>For a relative path to the login directory of the user, specify the URL in the format of &lt;tt>ftp://user:password@host:port/path&lt;/tt> .&lt;/li>&lt;/ul>&lt;/li>&lt;li>If the URL starts with sftp://, the service uses the SSH FTP protocol. &lt;ul>&lt;li>For an absolute path to the root directory, specify the URL in the format of &lt;tt>sftp://host:port/path&lt;/tt> .&lt;/li>&lt;li>For a relative path to the login directory of the user, specify the URL in the format of &lt;tt>sftp://host:port/~/path&lt;/tt> .&lt;/li>&lt;/ul>&lt;/li>&lt;li>If the URL starts with dpnfs://, the service uses the NFS protocol. &lt;ul>&lt;li>For static mounts, specify the URL in the format of &lt;tt>dpnfs://MountObjectName&lt;/tt> , where &lt;tt>MountObjectName&lt;/tt> is the name of an existing NFS mount.&lt;/li>&lt;li>For dynamic mounts, specify the URL in the format of &lt;tt>dpnfs://host&lt;/tt> or &lt;tt>dpnfs://host/path&lt;/tt> .&lt;/li>&lt;/ul>&lt;/li>&lt;li>If the URL starts with dpims:// or dpimsssl://, the service uses the IMS protocol. Specify the URL in either of the following formats: &lt;ul>&lt;li>&lt;tt>dpims://Connect-object/?parameters&lt;/tt>&lt;/li>&lt;li>&lt;tt>dpimsssl://Connect-object/?parameters&lt;/tt>&lt;/li>&lt;/ul>&lt;/li>&lt;li>If the URL starts with dpmq://, the service uses the IBM MQ protocol. The queue manager that is referenced in the URL must exist in the current application domain. &lt;ul>&lt;li>To send a message, specify the URL in the format of &lt;tt>dpmq://mqQueueManagerObject/URI?RequestQueue=requestQueueName;queryParameters&lt;/tt> .&lt;/li>&lt;li>To retrieve a message, specify the URL in the format of &lt;tt>dpmq://mqQueueManagerObject/URI?ReplyQueue=replyQueueName;queryParameters&lt;/tt> .&lt;/li>&lt;/ul>&lt;p>If the URL starts with mq://, the protocol is for dynamic routing.&lt;/p>&lt;/li>&lt;li>If the URL starts with dpmqfte://, the service uses the IBM MQ-FTE protocol. The queue manager that is referenced in the URL must exist in the current application domain. &lt;ul>&lt;li>To send a message, specify the URL in the format of &lt;tt>dpmqfte://queue_manager_name/?RequestQueue=request_queue_name;queryParameters&lt;/tt> .&lt;/li>&lt;li>To retrieve a message, specify the URL in the format of &lt;tt>dpmqfte://queue_manager_name/?ReplyQueue=reply_queue_name;queryParameters&lt;/tt> .&lt;/li>&lt;/ul>&lt;p>If the URL starts with mqfte://, the protocol is for dynamic routing.&lt;/p>&lt;/li>&lt;li>If the URL starts with dptibems://, the service uses the TIBCO EMS protocol. The server that is referenced in the URL must exist. &lt;ul>&lt;li>To send a message, specify the URL in the format of &lt;tt>dptibems://server-object/?RequestQueue=queue;RequestReply=queue;query-parameters&lt;/tt> .&lt;/li>&lt;li>To retrieve a message, specify the URL in the format of &lt;tt>dptibems://server-object/?ReplyQueue=queue;query-parameters&lt;/tt> .&lt;/li>&lt;/ul>&lt;p>If the URL starts with tibems://, the protocol is for dynamic routing.&lt;/p>&lt;p>This protocol is available on licensed DataPower Gateways only.&lt;/p>&lt;/li>&lt;li>If the URL starts with dpwasjms://, the service uses the WebSphere JMS protocol. The server that is referenced in the URL must exist. &lt;ul>&lt;li>To send a message to a request queue, specify the URL in the format of &lt;tt>dpwasjms://server-object/?RequestQueue=queue;RequestReply=queue;query-parameters&lt;/tt> .&lt;/li>&lt;li>To send a message to a request topic space, specify the URL in the format of &lt;tt>dpwasjms://server-object/?RequestTopicSpace=topic-space;RequestReply=queue;query-parameters&lt;/tt> .&lt;/li>&lt;li>To retrieve a message from a reply queue, specify the URL in the format of &lt;tt>dpwasjms://server-object/?ReplyQueue=queue;query-parameters&lt;/tt> .&lt;/li>&lt;li>To retrieve a message from a reply topic space, specify the URL in the format of &lt;tt>dpwasjms://server-object/?ReplyTopicSpace=topic-space;query-parameters&lt;/tt> .&lt;/li>&lt;/ul>&lt;/li>&lt;/ul>&lt;/p>"
                            }, 
                            {
                                "name": "EnabledDocType", 
                                "default": "EnableXML+EnableX12+EnableEDIFACT+EnableBinary", 
                                "type": {
                                    "href": "/mgmt/types/default/dmB2BEnabledDocType"
                                }, 
                                "summary": "Enabled document type", 
                                "cli-alias": "enabled-doc-type", 
                                "display": "Enabled document type", 
                                "description": "Indicates which document types to support."
                            }, 
                            {
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/SMTPServerConnection"
                                    }
                                }, 
                                "name": "SMTPServerConnection", 
                                "default": "default", 
                                "required-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-in-list", 
                                        "value": [
                                            "as1", 
                                            "dpsmtp"
                                        ]
                                    }
                                }, 
                                "summary": "SMTP server configuration", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "as1", 
                                            "dpsmtp"
                                        ]
                                    }
                                }, 
                                "cli-alias": "smtp-server-connection", 
                                "display": "SMTP server connection", 
                                "description": "The SMTP server connection to which to send e-mail messages. By default, the gateway uses the default SMTP server connection."
                            }, 
                            {
                                "cli-alias": "email-address", 
                                "name": "EmailAddress", 
                                "required-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-in-list", 
                                        "value": [
                                            "as1", 
                                            "dpsmtp"
                                        ]
                                    }
                                }, 
                                "summary": "Destination e-mail address for messages", 
                                "subtype": "B2BEmailAddress", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "as1", 
                                            "dpsmtp"
                                        ]
                                    }
                                }, 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "display": "E-mail address", 
                                "description": "The destination e-mail address for messages sent to this partner."
                            }, 
                            {
                                "name": "SSHClientConnection", 
                                "required-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-in-list", 
                                        "value": "sftp"
                                    }
                                }, 
                                "summary": "SSH client connection profile", 
                                "cli-alias": "ssh-client-connection", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": "sftp"
                                    }
                                }, 
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/SSHClientProfile"
                                    }
                                }, 
                                "display": "SSH client connection", 
                                "description": "Specifies the SSH profile used for SSH client connection and authentication."
                            }, 
                            {
                                "name": "UseUniqueFilenames", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Use unique file names", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "as3", 
                                            "ftp", 
                                            "sftp", 
                                            "dpnfs", 
                                            "mqfte", 
                                            "dpmqfte"
                                        ]
                                    }
                                }, 
                                "cli-alias": "use-unique-filenames", 
                                "display": "Use unique file names", 
                                "description": "&lt;p>Specifies whether to enable the generation of a unique file name for puts to a remote directory.&lt;/p>&lt;p>If you enable the use of a unique file name: &lt;ul>&lt;li>Specifying a directory in the destination URL generates a unique file name for puts to a remote directory.&lt;/li>&lt;li>Specifying a file name in the destination URL generates a unique file name that is appended to the specified file name for puts to a remote directory. &lt;p>&lt;b>Note:&lt;/b> On the SFTP protocol, if the specified file name is unique to the remote directory, the DataPower Gateway generates the same file name as what you specify in the destination URL. For example, specify &lt;tt>host/01/temp&lt;/tt> in the SFTP destination URL: &lt;ul>&lt;li>If there is no file named &lt;tt>temp&lt;/tt> in the directory, the generated file is &lt;tt>host/01/temp&lt;/tt> .&lt;/li>&lt;li>If a file named &lt;tt>temp&lt;/tt> already exists in the directory, the generated file is &lt;tt>host/01/temp.unique&lt;/tt> .&lt;/li>&lt;/ul>&lt;/p>&lt;/li>&lt;/ul>&lt;/p>"
                            }, 
                            {
                                "name": "SSLProxy", 
                                "required-when": {
                                    "condition": {
                                        "evaluation": "logical-and", 
                                        "condition": [
                                            {
                                                "property-name": "SSLClientConfigType", 
                                                "evaluation": "property-equals", 
                                                "value": "proxy"
                                            }, 
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-in-list", 
                                                "value": [
                                                    "as2s", 
                                                    "https", 
                                                    "dpimsssl", 
                                                    "ebms2s", 
                                                    "ebms3s"
                                                ]
                                            }
                                        ]
                                    }
                                }, 
                                "summary": "The TLS proxy profile is deprecated. Use a TLS client profile.", 
                                "cli-alias": "ssl", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "SSLClientConfigType", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "proxy"
                                            }, 
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "as2s", 
                                                    "as3", 
                                                    "https", 
                                                    "ftp", 
                                                    "mq", 
                                                    "mqfte", 
                                                    "dpimsssl", 
                                                    "ebms2s"
                                                ]
                                            }
                                        ]
                                    }
                                }, 
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/SSLProxyProfile"
                                    }
                                }, 
                                "display": "TLS proxy profile (deprecated)", 
                                "description": "Sets the TLS proxy profile to establish a TLS-enabled, secured connection."
                            }, 
                            {
                                "name": "OverrideTimeout", 
                                "default": 300, 
                                "type": {
                                    "href": "/mgmt/types/default/dmTimeInterval"
                                }, 
                                "maximum": 7200, 
                                "summary": "Override timeout", 
                                "minimum": 3, 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "EBMSMessageExchangePattern", 
                                        "evaluation": "property-equals", 
                                        "value": "one-way-pull"
                                    }
                                }, 
                                "units": "Seconds", 
                                "cli-alias": "timeout", 
                                "display": "Connection timeout", 
                                "description": "Specifies the maximum number of seconds to maintain an idle connection. Use any value of 3 - 7200. The default value is 300."
                            }, 
                            {
                                "name": "EnableFTPSettings", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Control for AS3/FTP settings", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "ftp", 
                                            "as3"
                                        ]
                                    }
                                }, 
                                "cli-alias": "enable-ftp-settings", 
                                "display": "Enable advanced AS3/FTP settings", 
                                "description": "&lt;p>Indicates whether to override the FTP client policy for the user agent that is associated with the B2B Gateway. This user agent is defined in the XML manager assigned to the B2B Gateway.&lt;/p>&lt;ul>&lt;li>When When enabled, define overrides to the original FTP client policy with the advanced AS3 or FTP settings.&lt;/li>&lt;li>When disabled, uses the original FTP client policy.&lt;/li>&lt;/ul>&lt;p>The default behavior is off.&lt;/p>"
                            }, 
                            {
                                "maximum-length": 128, 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "description": "Overrides the user name in the basic authentication policy for the user agent that the B2B Gateway uses.", 
                                "summary": "User name", 
                                "valid-regexp": "^[_a-zA-Z0-9-.]+$", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "as2", 
                                            "as2s", 
                                            "as3", 
                                            "ebms2", 
                                            "ebms2s", 
                                            "ebms3", 
                                            "ebms3s", 
                                            "http", 
                                            "https", 
                                            "ftp"
                                        ]
                                    }
                                }, 
                                "cli-alias": "username", 
                                "display": "User name", 
                                "name": "UserName"
                            }, 
                            {
                                "maximum-length": 128, 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "description": "Overrides the password for the user in the basic authentication policy for the user agent that the B2B Gateway uses.", 
                                "summary": "Password", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "as2", 
                                                    "as2s", 
                                                    "as3", 
                                                    "ebms2", 
                                                    "ebms2s", 
                                                    "ebms3", 
                                                    "ebms3s", 
                                                    "http", 
                                                    "https", 
                                                    "ftp"
                                                ]
                                            }, 
                                            {
                                                "property-name": "Password", 
                                                "evaluation": "property-equals", 
                                                "value": ""
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "password", 
                                "display": "Password (deprecated)", 
                                "name": "Password"
                            }, 
                            {
                                "maximum-length": 128, 
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/PasswordAlias"
                                    }
                                }, 
                                "description": "Overrides the password for the user in the basic authentication policy for the user agent that the B2B Gateway uses.", 
                                "summary": "Password alias", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "as2", 
                                            "as2s", 
                                            "as3", 
                                            "ebms2", 
                                            "ebms2s", 
                                            "ebms3", 
                                            "ebms3s", 
                                            "http", 
                                            "https", 
                                            "ftp"
                                        ]
                                    }
                                }, 
                                "cli-alias": "password-alias", 
                                "display": "Password alias", 
                                "name": "PasswordAlias"
                            }, 
                            {
                                "name": "EBMSMPCAuthMethod", 
                                "type": {
                                    "href": "/mgmt/types/default/dmEBMSMPCAuthMethod"
                                }, 
                                "summary": "How MPC authenticates pull request", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms3", 
                                                    "ebms3s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSMessageExchangePattern", 
                                                "evaluation": "property-equals", 
                                                "value": "one-way-push"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "embs-mpc-auth-method", 
                                "display": "MPC authentication method", 
                                "description": "Specifies how the MPC authenticates the incoming pull requests. By default, the MPC authenticates requests through username token."
                            }, 
                            {
                                "maximum-length": 128, 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "description": "For ebMS3, the DataPower Gateway applies the Web Services Security UsernameToken to authorize the received messages. Enter the user name for the wsse:UsernameToken element to be packaged into the SOAP header of the message to send. &lt;ul>&lt;li>For one-way push exchange pattern, specify the username token to be packaged into messages to send.&lt;/li>&lt;li>For one-way pull exchange pattern outbound messages, when the MPC authentication method is username token, specify the user name that is used for storing messages in the MPC.&lt;/li>&lt;li>For one-way pull exchange pattern inbound messages, specify the username token to be packaged into the pull request.&lt;/li>&lt;/ul>", 
                                "summary": "Username token to secure messages", 
                                "valid-regexp": "^[_a-zA-Z0-9-.]+$", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "evaluation": "logical-and", 
                                                "condition": [
                                                    {
                                                        "property-name": "EBMSMPCAuthMethod", 
                                                        "evaluation": "property-equals", 
                                                        "value": "cert"
                                                    }, 
                                                    {
                                                        "property-name": "EBMSMessageExchangePattern", 
                                                        "evaluation": "property-equals", 
                                                        "value": "one-way-pull"
                                                    }
                                                ]
                                            }, 
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms3", 
                                                    "ebms3s"
                                                ]
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "username-token", 
                                "display": "Username token", 
                                "name": "UserNameToken"
                            }, 
                            {
                                "maximum-length": 128, 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "description": "Enter the password of the user name for the wsse:UsernameToken element.", 
                                "summary": "Username token password", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms3", 
                                                    "ebms3s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "UserNameTokenPassword", 
                                                "evaluation": "property-equals", 
                                                "value": ""
                                            }, 
                                            {
                                                "property-name": "EBMSMPCAuthMethod", 
                                                "evaluation": "property-equals", 
                                                "value": "cert"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "username-token-password", 
                                "display": "Username token password (deprecated)", 
                                "name": "UserNameTokenPassword"
                            }, 
                            {
                                "maximum-length": 128, 
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/PasswordAlias"
                                    }
                                }, 
                                "description": "Select the password alias of the user name for the wsse:UsernameToken element.", 
                                "summary": "Username token password alias", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "evaluation": "logical-and", 
                                                "condition": [
                                                    {
                                                        "property-name": "EBMSMPCAuthMethod", 
                                                        "evaluation": "property-equals", 
                                                        "value": "cert"
                                                    }, 
                                                    {
                                                        "property-name": "EBMSMessageExchangePattern", 
                                                        "evaluation": "property-equals", 
                                                        "value": "one-way-pull"
                                                    }
                                                ]
                                            }, 
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms3", 
                                                    "ebms3s"
                                                ]
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "username-token-password-alias", 
                                "display": "Username token password alias", 
                                "name": "UserNameTokenPasswordAlias"
                            }, 
                            {
                                "name": "EBMSMPCVerifyValCred", 
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/CryptoValCred"
                                    }
                                }, 
                                "summary": "Validation credential to secure messages", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms3", 
                                                    "ebms3s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSMPCAuthMethod", 
                                                "evaluation": "property-equals", 
                                                "value": "username-token"
                                            }, 
                                            {
                                                "property-name": "EBMSMessageExchangePattern", 
                                                "evaluation": "property-equals", 
                                                "value": "one-way-push"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-mpc-verify-valcred", 
                                "display": "MPC validation credential", 
                                "description": "When the MPC authentication method is validation credential, specifies the certificate to be associated to messages that are submitted to the MPC."
                            }, 
                            {
                                "name": "Passive", 
                                "default": "pasv-req", 
                                "type": {
                                    "href": "/mgmt/types/default/dmFTPPassivePolicy"
                                }, 
                                "summary": "Controls the use of FTP Passive mode", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ftp", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EnableFTPSettings", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ftp-passive", 
                                "display": "Passive mode", 
                                "description": "&lt;p>Overrides the Passive Mode setting in the FTP client policy for the user agent that the B2B Gateway uses. If overriding, indicate how to use the passive mode with the FTP &lt;b>PASV&lt;/b> command.&lt;/p>"
                            }, 
                            {
                                "name": "AuthTLS", 
                                "default": "auth-off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmFTPAuthPolicy"
                                }, 
                                "summary": "Controls the use of TLS to secure connections", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ftp", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EnableFTPSettings", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ftp-auth-tls", 
                                "display": "Encrypt command connection", 
                                "description": "&lt;p>Overrides the Encrypt Command Connection setting in the FTP client policy for the user agent that the B2B Gateway uses. If overriding, indicate how to use authentication and encryption of the command channel with the FTP &lt;b>AUTH TLS&lt;/b> command.&lt;/p>"
                            }, 
                            {
                                "name": "UseCCC", 
                                "default": "ccc-off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmFTPCCCPolicy"
                                }, 
                                "summary": "Controls the use of command encryption after authentication", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ftp", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EnableFTPSettings", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }, 
                                            {
                                                "property-name": "AuthTLS", 
                                                "evaluation": "property-equals", 
                                                "value": "auth-off"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ftp-use-ccc", 
                                "display": "Stop command encryption after authentication", 
                                "description": "&lt;p>Overrides the Stop Command Encryption After Authentication setting in the FTP client policy for the user agent that the B2B Gateway uses. If overriding, indicate how to use command channel encryption after user authentication with the FTP &lt;b>CCC&lt;/b> command.&lt;/p>"
                            }, 
                            {
                                "name": "EncryptData", 
                                "default": "enc-data-off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmFTPDataEncryptionPolicy"
                                }, 
                                "summary": "Controls encryption of file transfers", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ftp", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EnableFTPSettings", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }, 
                                            {
                                                "property-name": "AuthTLS", 
                                                "evaluation": "property-equals", 
                                                "value": "auth-off"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ftp-encrypt-data", 
                                "display": "Encrypt file transfers", 
                                "description": "&lt;p>Overrides the Encrypt File Transfers setting in the FTP client policy for the user agent that the B2B Gateway uses. If overriding, indicate how to use data connection encryption with the FTP &lt;b>PROT P&lt;/b> command.&lt;/p>"
                            }, 
                            {
                                "name": "DataType", 
                                "default": "binary", 
                                "type": {
                                    "href": "/mgmt/types/default/dmFTPDataTypePolicy"
                                }, 
                                "summary": "Data type of file transfers", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ftp", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EnableFTPSettings", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ftp-data-type", 
                                "display": "Data type", 
                                "description": "Overrides the Data Type setting in the FTP client policy for the user agent that the B2B Gateway uses. If overriding, indicate how to transfer data."
                            }, 
                            {
                                "name": "SlashSTOU", 
                                "default": "slash-stou-on", 
                                "type": {
                                    "href": "/mgmt/types/default/dmFTPSlashSTOUPolicy"
                                }, 
                                "summary": "Controls unique files if name contains a trailing slash", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ftp", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EnableFTPSettings", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ftp-slash-stou", 
                                "display": "Write unique filename if trailing slash", 
                                "description": "&lt;p>Overrides the unique filename if trailing slash setting in the FTP client policy for the user agent that the B2B Gateway uses. If overriding, indicate how to use sever-generated unique file names when the URL being written to ends in a slash.&lt;/p>&lt;p>Some FTP servers provide the &lt;b>STOU&lt;/b> command. Use the command only if the FTP server supports this command. The &lt;b>STOU&lt;/b> command allows the FTP server to choose the unique file name in the current directory. Using the &lt;b>STOU&lt;/b> command does not require the client to choose a unique file name.&lt;/p>&lt;p>When enabled and a URL being written to ends in a /, the FTP server uses the &lt;b>STOU&lt;/b> command instead of the &lt;b>STOR&lt;/b> command.&lt;/p>"
                            }, 
                            {
                                "name": "QuotedCommands", 
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/FTPQuoteCommands"
                                    }
                                }, 
                                "summary": "FTP quoted commands list", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ftp", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EnableFTPSettings", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ftp-quoted-commands", 
                                "display": "Quoted commands", 
                                "description": "&lt;p>Overrides the Quoted Commands setting in the FTP client policy for the user agent that the B2B Gateway uses. If overriding, specify the FTP Quoted Commands List to send to the FTP server before each &lt;b>STOU&lt;/b>, &lt;b>STOR&lt;/b>, or &lt;b>RETR&lt;/b> command.&lt;/p>&lt;p>A typical use would be to use &lt;b>SITE&lt;/b> commands, such as &lt;tt>SITE RECFM=FB&lt;/tt> for the MVS domain on a z/OS system. The commands in the list cannot be data-transfer related, such as &lt;b>STOU&lt;/b>, &lt;b>RETR&lt;/b>, &lt;b>PORT&lt;/b>, &lt;b>PASV&lt;/b>, and so forth.&lt;/p>"
                            }, 
                            {
                                "name": "SizeCheck", 
                                "default": "size-check-optional", 
                                "type": {
                                    "href": "/mgmt/types/default/dmFTPSizeCheckPolicy"
                                }, 
                                "summary": "Constrols the use of a size check after file transfer", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ftp", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EnableFTPSettings", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ftp-size-check", 
                                "display": "Size check", 
                                "description": "&lt;p>Overrides the Size Check setting in the FTP client policy for the user agent that the B2B Gateway uses. If overriding, indicate how to use a size check after a data transfer with the FTP &lt;b>SIZE&lt;/b> command.&lt;/p>&lt;p>If optional and the FTP server does not support the &lt;b>SIZE&lt;/b> command, no error results. Some FTP servers, particularly vsftpd in the default configuration, provide inaccurate responses for files transferred in ASCII mode. If you get such errors, disable this feature. Alternatively, you can reconfigure vsftpd.&lt;/p>"
                            }, 
                            {
                                "name": "BinaryTransferMode", 
                                "type": {
                                    "href": "/mgmt/types/default/dmB2BBinaryTransferMode"
                                }, 
                                "summary": "Whether to transfer the message payload in binary mode.", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "as1", 
                                            "as2", 
                                            "as2s", 
                                            "as3"
                                        ]
                                    }
                                }, 
                                "cli-alias": "binary-transfer-mode", 
                                "display": "Binary transfer", 
                                "description": "Controls whether to transfer the message payload in binary mode."
                            }, 
                            {
                                "name": "ASCompress", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to compress messages", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "as1", 
                                            "as2", 
                                            "as2s", 
                                            "as3"
                                        ]
                                    }
                                }, 
                                "cli-alias": "as-compress", 
                                "display": "Compress messages", 
                                "description": "Controls whether to compress the body of outbound AS messages. The default behavior is off."
                            }, 
                            {
                                "name": "ASCompressBeforeSign", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to compress before signing", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "as1", 
                                                    "as2", 
                                                    "as2s", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "ASCompress", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "as-compress-before-sign", 
                                "display": "Compress before sign", 
                                "description": "&lt;p>Controls whether to compress the body of outbound AS messages before signing. The default behavior is off.&lt;/p>&lt;ul>&lt;li>If enabled, compresses the message body before signing.&lt;/li>&lt;li>If disabled, signs the message before compressing the message body.&lt;/li>&lt;/ul>"
                            }, 
                            {
                                "name": "ASSendUnsigned", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to override the signing of messages to this destination", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "as1", 
                                            "as2", 
                                            "as2s", 
                                            "as3"
                                        ]
                                    }
                                }, 
                                "cli-alias": "as-send-unsigned", 
                                "display": "Send messages unsigned", 
                                "description": "&lt;p>Controls whether to override the signing of messages to this destination. Whether to sign outbound message is part of the configuration of the internal partner. This property cannot be used to cause a message to be signed. The default behavior is off.&lt;/p>&lt;ul>&lt;li>If enabled, never signs messages.&lt;/li>&lt;li>If disabled, signs messages if the sender has signing credentials.&lt;/li>&lt;/ul>"
                            }, 
                            {
                                "name": "ASEncrypt", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to encrypt messages", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "as1", 
                                            "as2", 
                                            "as2s", 
                                            "as3"
                                        ]
                                    }
                                }, 
                                "cli-alias": "as-encrypt", 
                                "display": "Encrypt messages", 
                                "description": "Controls whether to encrypt the body of outgoing AS messages. The default behavior is off."
                            }, 
                            {
                                "name": "ASEncryptCert", 
                                "required-when": {
                                    "condition": {
                                        "evaluation": "logical-and", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-in-list", 
                                                "value": [
                                                    "as1", 
                                                    "as2", 
                                                    "as2s", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "ASEncrypt", 
                                                "evaluation": "property-equals", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "summary": "Certificate to encrypt outbound AS messages", 
                                "cli-alias": "as-encrypt-cert", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-true"
                                    }
                                }, 
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/CryptoCertificate"
                                    }
                                }, 
                                "display": "Encryption certificate", 
                                "description": "Sets the certificate that encrypts outbound messages. Use the name of a certificate."
                            }, 
                            {
                                "name": "ASMDNRequest", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to request an MDN", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "as1", 
                                            "as2", 
                                            "as2s", 
                                            "as3"
                                        ]
                                    }
                                }, 
                                "cli-alias": "as-mdn-request", 
                                "display": "Request MDN", 
                                "description": "Controls whether to request an MDN for outbound AS messages. The default behavior is off."
                            }, 
                            {
                                "name": "ASMDNRequestAsync", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether the MDN request is synchronous or asynchronous", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "as2", 
                                                    "as2s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "ASMDNRequest", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "as-mdn-request-async", 
                                "display": "Request asynchronous MDN", 
                                "description": "&lt;p>Controls whether the MDN request for outbound AS messages is asynchronous. The default behavior is off.&lt;/p>&lt;ul>&lt;li>If enabled, the MDN request is asynchronous&lt;/li>&lt;li>If disabled, the MDN request is synchronous&lt;/li>&lt;/ul>"
                            }, 
                            {
                                "name": "AS1MDNRedirectEmail", 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "summary": "Specifies the redirection e-mail address for an AS1 MDN", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": "as1"
                                            }, 
                                            {
                                                "property-name": "ASMDNRequest", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "as1-mdn-email", 
                                "display": "AS1 MDN redirection E-mail", 
                                "description": "The explicit, redirection e-mail for the MDN to outbound AS1 messages. The partner that receives the outbound AS1 message will send the MDN to this e-mail address. If not specified, the redirection e-mail will be the From address of the outgoing message (the default e-mail address of the sending internal partner)."
                            }, 
                            {
                                "name": "AS2MDNRedirectURL", 
                                "cli-alias": "as2-mdn-url", 
                                "locations": {
                                    "location": "\"NONE\""
                                }, 
                                "summary": "Redirection URL for an AS2 MDN", 
                                "subtype": "dmURLProtocol", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "as2", 
                                                    "as2s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "ASMDNRequest", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }, 
                                            {
                                                "property-name": "ASMDNRequestAsync", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "type": {
                                    "href": "/mgmt/types/default/dmURL"
                                }, 
                                "display": "AS2 MDN redirection URL", 
                                "protocols": {
                                    "protocol": [
                                        "http", 
                                        "https"
                                    ]
                                }, 
                                "description": "Specifies the explicit, redirection URL for the MDN to outbound AS2 messages."
                            }, 
                            {
                                "name": "AS3MDNRedirectURL", 
                                "cli-alias": "as3-mdn-url", 
                                "locations": {
                                    "location": "\"NONE\""
                                }, 
                                "summary": "Redirection URL for an AS3 MDN", 
                                "subtype": "dmURLProtocol", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": "as3"
                                            }, 
                                            {
                                                "property-name": "ASMDNRequest", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "type": {
                                    "href": "/mgmt/types/default/dmURL"
                                }, 
                                "display": "AS3 MDN redirection URL", 
                                "protocols": {
                                    "protocol": "ftp"
                                }, 
                                "description": "Specifies the explicit, redirection URL for the MDN to outbound AS3 messages."
                            }, 
                            {
                                "name": "ASMDNRequestSigned", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to request a signed MDN", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "as1", 
                                                    "as2", 
                                                    "as2s", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "ASMDNRequest", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "as-mdn-request-signed", 
                                "display": "Request signed MDN", 
                                "description": "Controls whether to request a signed MDN, as opposed to an unsigned one. The default behavior is off."
                            }, 
                            {
                                "name": "Retransmit", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to retransmit messages", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "as1", 
                                                    "as2", 
                                                    "as2s", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "ASMDNRequest", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "retransmit", 
                                "display": "Attempt message retransmission", 
                                "description": "Controls whether to enable the logic for the retransmission of messages. The default behavior is off."
                            }, 
                            {
                                "name": "ACKTime", 
                                "default": 1800, 
                                "type": {
                                    "href": "/mgmt/types/default/dmTimeInterval"
                                }, 
                                "maximum": 3600, 
                                "summary": "Time to wait before the retransmission of a message.", 
                                "minimum": 1, 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "as1", 
                                                    "as2", 
                                                    "as2s", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "ASMDNRequest", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "units": "Seconds", 
                                "cli-alias": "ack-time", 
                                "display": "Time to acknowledge", 
                                "description": "Specifies the maximum number of seconds to wait for the acknowledgment before the retransmission of a message. Use an integer between 1 through 3600. The default value is 1800."
                            }, 
                            {
                                "name": "MaxResends", 
                                "default": 3, 
                                "type": {
                                    "href": "/mgmt/types/default/dmUInt32"
                                }, 
                                "maximum": 30, 
                                "summary": "Maximum number of retransmissions", 
                                "minimum": 1, 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "as1", 
                                                    "as2", 
                                                    "as2s", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "ASMDNRequest", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }, 
                                            {
                                                "property-name": "Retransmit", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "max-resends", 
                                "display": "Maximum retransmissions", 
                                "description": "Specifies the maximum number of times to attempt the retransmission of a message. Use an integer between 1 through 30. The default value is 3."
                            }, 
                            {
                                "name": "ASEncryptAlg", 
                                "default": "3des", 
                                "type": {
                                    "href": "/mgmt/types/default/dmCMSEncryptionAlgorithm"
                                }, 
                                "summary": "AS Symmetric encryption algorithm", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "as1", 
                                                    "as2", 
                                                    "as2s", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "ASEncrypt", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "as-encrypt-alg", 
                                "display": "Encryption algorithm", 
                                "description": "Sets the symmetric encryption algorithm that encrypts outbound AS messages."
                            }, 
                            {
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "name": "ASMDNRequestSignedAlgs", 
                                "default": "sha1,md5", 
                                "valid-regexp": "^((sha1|sha-1|md5|sha256|sha-256|sha384|sha-384|sha512|sha-512),)*(sha1|sha-1|md5|sha256|sha-256|sha384|sha-384|sha512|sha-512)$", 
                                "summary": "Which digest algorithms to request for a signed MDN", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "as1", 
                                                    "as2", 
                                                    "as2s", 
                                                    "as3"
                                                ]
                                            }, 
                                            {
                                                "property-name": "ASMDNRequest", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }, 
                                            {
                                                "property-name": "ASMDNRequestSigned", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "as-mdn-request-signed-algs", 
                                "display": "Request MDN signing algorithms", 
                                "description": "&lt;p>Controls which digest algorithms to ask for when requesting a signed MDN. The value can be a single algorithm or any combination of two or more different algorithms that are separated by a comma. For example, &lt;tt>md5,sha256&lt;/tt> . The default value is &lt;tt>sha1,md5&lt;/tt> . The following algorithms are supported.&lt;/p>&lt;ul>&lt;li>&lt;tt>md5&lt;/tt>&lt;/li>&lt;li>&lt;tt>sha1&lt;/tt> or &lt;tt>sha-1&lt;/tt>&lt;/li>&lt;li>&lt;tt>sha256&lt;/tt> or &lt;tt>sha-256&lt;/tt>&lt;/li>&lt;li>&lt;tt>sha384&lt;/tt> or &lt;tt>sha-384&lt;/tt>&lt;/li>&lt;li>&lt;tt>sha512&lt;/tt> or &lt;tt>sha-512&lt;/tt>&lt;/li>&lt;/ul>"
                            }, 
                            {
                                "name": "EBMSCpaId", 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "summary": "CPA ID", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "ebms2", 
                                            "ebms2s"
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-cpa-id", 
                                "display": "CPA ID", 
                                "description": "Specifies the CPA ID in the message that is sent to the destination partner. You can use the value to identify the sender and the recipient. This value is used when the B2B Gateway is not CPA-enforced."
                            }, 
                            {
                                "name": "EBMSService", 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "summary": "Value of service element in outbound ebMS2 request", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "ebms2", 
                                            "ebms2s"
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-service", 
                                "display": "Service", 
                                "description": "Specifies the service that acts on the message. For example, &lt;tt>urn:services:SupplierOrderProcessing&lt;/tt> . This value is used when the B2B Gateway is not CPA-enforced. The value can be a string or a URI. If a non-URI string is specified, you need to specify the value of &lt;b>Service Type&lt;/b>."
                            }, 
                            {
                                "name": "EBMSServiceType", 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "summary": "Value of type attribute associated with Service", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "ebms2", 
                                            "ebms2s"
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-service-type", 
                                "display": "Service type", 
                                "description": "Specifies the value of the type attribute in the ebMS SOAP message. If you do not specify the service type, make sure that the service value is a URI."
                            }, 
                            {
                                "name": "EBMSAction", 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "summary": "Value of action element in outbound ebMS2 request", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "ebms2", 
                                            "ebms2s"
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-action", 
                                "display": "Action", 
                                "description": "Specifies the action in a service. For example, &lt;tt>NewPurchaseOrder&lt;/tt> . This value is used when the B2B Gateway is not CPA-enforced."
                            }, 
                            {
                                "name": "EBMSSendUnsigned", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to override the signing of messages to this destination", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "ebms2", 
                                            "ebms2s", 
                                            "ebms3", 
                                            "ebms3s"
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-send-unsigned", 
                                "display": "Send messages unsigned", 
                                "description": "&lt;p>Controls whether to override the signing of messages to this destination. Whether to sign outbound message is part of the configuration of the internal partner. This property cannot be used to cause a message to be signed. The default behavior is off.&lt;/p>&lt;ul>&lt;li>If enabled, never signs messages.&lt;/li>&lt;li>If disabled, signs messages if the sender has signing credentials.&lt;/li>&lt;/ul>"
                            }, 
                            {
                                "name": "EBMSEncrypt", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to encrypt messages", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "ebms2", 
                                            "ebms2s", 
                                            "ebms3", 
                                            "ebms3s"
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-encrypt", 
                                "display": "Encrypt messages", 
                                "description": "Controls whether to encrypt the body of outgoing ebMS messages. The default behavior is off."
                            }, 
                            {
                                "name": "EBMSEncryptCert", 
                                "required-when": {
                                    "condition": {
                                        "evaluation": "logical-and", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-in-list", 
                                                "value": [
                                                    "ebms2", 
                                                    "ebms2s", 
                                                    "ebms3", 
                                                    "ebms3s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSEncrypt", 
                                                "evaluation": "property-equals", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "summary": "Certificate to encrypt outbound messages", 
                                "cli-alias": "ebms-encrypt-cert", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-true"
                                    }
                                }, 
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/CryptoCertificate"
                                    }
                                }, 
                                "display": "Encryption certificate", 
                                "description": "Sets the certificate that encrypts outbound messages. Use the name of a certificate."
                            }, 
                            {
                                "name": "EBMSEncryptAlg", 
                                "type": {
                                    "href": "/mgmt/types/default/dmCryptoEncryptionAlgorithm"
                                }, 
                                "summary": "ebMS2 encryption algorithm", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms2", 
                                                    "ebms2s", 
                                                    "ebms3", 
                                                    "ebms3s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSEncrypt", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-encrypt-alg", 
                                "display": "Encryption algorithm", 
                                "description": "Sets the encryption algorithm that encrypts outbound ebMS2 messages."
                            }, 
                            {
                                "name": "EBMSDuplicateEliminationRequest", 
                                "default": "on", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to request elimination of duplicate messages for outbound messages", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "ebms2", 
                                            "ebms2s"
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-duplicate-elimination-request", 
                                "display": "Request duplicate elimination", 
                                "description": "Controls whether to request the receiving partner to check for duplicate messages for the outbound message. If enabled, the receiving business partner should ignore duplicate message received. The default behavior is on."
                            }, 
                            {
                                "name": "EBMSAckRequest", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to request an Acknowledgment", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "ebms2", 
                                            "ebms2s"
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-ack-request", 
                                "display": "Request acknowledgment", 
                                "description": "Controls whether to request an Acknowledgment for outbound ebMS2 messages. The default behavior is off."
                            }, 
                            {
                                "name": "EBMSAckRequestSigned", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to request a signed Acknowledgment", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms2", 
                                                    "ebms2s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSAckRequest", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-ack-request-signed", 
                                "display": "Request signed acknowledgment", 
                                "description": "Controls whether to request the Acknowledgment message signed. The default behavior is off."
                            }, 
                            {
                                "name": "EBMSSyncReplyMode", 
                                "type": {
                                    "href": "/mgmt/types/default/dmEBMSSyncReplyMode"
                                }, 
                                "summary": "Whether the response/acknowledgment is synchronous or asynchronous", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": {
                                            "property-name": "DestURL", 
                                            "evaluation": "property-url-protocol-not-in-list", 
                                            "value": [
                                                "ebms2", 
                                                "ebms2s"
                                            ]
                                        }
                                    }
                                }, 
                                "cli-alias": "ebms-syncreply-mode", 
                                "display": "SyncReply mode", 
                                "description": "Select syncReplyMode parameter, which can be obtained from CPA, to indicate to the receiving partner whether to return the besiness response or Acknowledgment in the same connection. None means asynchronous by default."
                            }, 
                            {
                                "name": "EBMSRetry", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to retransmit an unacknowledged message", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms2", 
                                                    "ebms2s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSAckRequest", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-retry", 
                                "display": "Attempt message retry", 
                                "description": "Controls whether to enable the logic for the retransmission of unacknowledged outbound messages. The default behavior is off."
                            }, 
                            {
                                "name": "EBMSMaxRetries", 
                                "default": 3, 
                                "type": {
                                    "href": "/mgmt/types/default/dmUInt32"
                                }, 
                                "maximum": 30, 
                                "summary": "Maximum number of retries", 
                                "minimum": 1, 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms2", 
                                                    "ebms2s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSAckRequest", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }, 
                                            {
                                                "property-name": "EBMSRetry", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-max-retries", 
                                "display": "Maximum retries", 
                                "description": "Specifies the maximum number of times, which can be obtained from a CPA, to attempt the retransmission of a message. Use an integer between 1 through 30. The default value is 3, which means a message sent can potentially be sent four times (the initiative one and successive 3 retries)."
                            }, 
                            {
                                "name": "EBMSRetryInterval", 
                                "default": 1800, 
                                "type": {
                                    "href": "/mgmt/types/default/dmTimeInterval"
                                }, 
                                "maximum": 3600, 
                                "summary": "Time interval of each retry attempt", 
                                "minimum": 1, 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms2", 
                                                    "ebms2s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSRetry", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }
                                        ]
                                    }
                                }, 
                                "units": "Seconds", 
                                "cli-alias": "ebms-retry-interval", 
                                "display": "Retry interval", 
                                "description": "Specifies the interval in seconds between retry attempts. Use any value of 1 - 3600. This default is 1800."
                            }, 
                            {
                                "name": "EBMSIncludeTimeToLive", 
                                "default": "on", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Lifetime of the message", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms2", 
                                                    "ebms2s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSRetry", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "on"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-include-time-to-live", 
                                "display": "Include TimeToLive element", 
                                "description": "Controls whether the sending partner includes the &amp;lt;TimeToLive> element in the outbound ebMS2 message header. The &amp;lt;TimeToLive> element indicates when the message expires. &lt;ul>&lt;li>If the receiving partner receives the message before it expires, the receiving partner accepts the message.&lt;/li>&lt;li>If the receiving partner receives the message after it expires, the receiving partner rejects the message.&lt;/li>&lt;/ul>"
                            }, 
                            {
                                "name": "SSLClientConfigType", 
                                "default": "proxy", 
                                "type": {
                                    "href": "/mgmt/types/default/dmSSLClientConfigType"
                                }, 
                                "summary": "Set the TLS profile type to secure connections between the DataPower Gateway and its targets", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "as2s", 
                                            "as3", 
                                            "https", 
                                            "ftp", 
                                            "mq", 
                                            "mqfte", 
                                            "dpimsssl", 
                                            "ebms2s", 
                                            "ebms3s"
                                        ]
                                    }
                                }, 
                                "cli-alias": "ssl-client-type", 
                                "display": "TLS client type", 
                                "description": "The TLS profile type to secure connections between the DataPower Gateway and its targets."
                            }, 
                            {
                                "name": "SSLClient", 
                                "required-when": {
                                    "condition": {
                                        "evaluation": "logical-and", 
                                        "condition": [
                                            {
                                                "property-name": "SSLClientConfigType", 
                                                "evaluation": "property-equals", 
                                                "value": "client"
                                            }, 
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-in-list", 
                                                "value": [
                                                    "as2s", 
                                                    "https", 
                                                    "dpimsssl", 
                                                    "ebms2s", 
                                                    "ebms3s"
                                                ]
                                            }
                                        ]
                                    }
                                }, 
                                "summary": "Set the TLS client profile to secure connections between the DataPower Gateway and its targets", 
                                "cli-alias": "ssl-client", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "SSLClientConfigType", 
                                                "evaluation": "property-does-not-equal", 
                                                "value": "client"
                                            }, 
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "as2s", 
                                                    "as3", 
                                                    "https", 
                                                    "ftp", 
                                                    "mq", 
                                                    "mqfte", 
                                                    "dpimsssl", 
                                                    "ebms2s"
                                                ]
                                            }
                                        ]
                                    }
                                }, 
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/SSLClientProfile"
                                    }
                                }, 
                                "display": "TLS client profile", 
                                "description": "The TLS client profile to secure connections between the DataPower Gateway and its targets."
                            }, 
                            {
                                "type": {
                                    "href": "/mgmt/types/default/dmEBMSMEP"
                                }, 
                                "name": "EBMSMessageExchangePattern", 
                                "default": "one-way-push", 
                                "required-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-in-list", 
                                        "value": [
                                            "ebms3", 
                                            "ebms3s"
                                        ]
                                    }
                                }, 
                                "summary": "Message exchange pattern", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "ebms3", 
                                            "ebms3s"
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-mep", 
                                "display": "Message exchange pattern", 
                                "description": "Select the message exchange pattern (MEP) to use. The MEP defines how a business partner exchanges messages with another business partner. The default value is one-way push."
                            }, 
                            {
                                "maximum-length": 128, 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "description": "When the MEP is one-way pull, specify the message partition channel (MPC) to pull message from. In the one-way pull mode, a message remains in the MPC storage until the DataPower Gateway receives an authenticated and authorized pull request.", 
                                "summary": "Message partition channel", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms3", 
                                                    "ebms3s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSMessageExchangePattern", 
                                                "evaluation": "property-equals", 
                                                "value": "one-way-push"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-mpc", 
                                "display": "Message partition channel", 
                                "name": "EBMSMessagePartitionChannel"
                            }, 
                            {
                                "name": "EBMSOutboundRequestReceipt", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to request a receipt for a sent message", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "ebms3", 
                                            "ebms3s"
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-outbound-request-receipt", 
                                "display": "Request receipt", 
                                "description": "Controls whether to request a receipt signal for a sent ebMS3 message. The default behavior is off."
                            }, 
                            {
                                "name": "EBMSOutboundRequestSignedReceipt", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to request the receipt to be signed", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms3", 
                                                    "ebms3s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSOutboundRequestReceipt", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-outbound-request-signed-receipt", 
                                "display": "Request signed receipt", 
                                "description": "Controls whether to request the receipt message to be signed. The default behavior is off."
                            }, 
                            {
                                "name": "EBMSOutboundReceiptReplyPattern", 
                                "type": {
                                    "href": "/mgmt/types/default/dmEBMSReplyPattern"
                                }, 
                                "summary": "Specify the pattern to send the receipt signal.", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms3", 
                                                    "ebms3s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSOutboundRequestReceipt", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }, 
                                            {
                                                "property-name": "EBMSMessageExchangePattern", 
                                                "evaluation": "property-equals", 
                                                "value": "one-way-pull"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-outbound-receipt-reply-pattern", 
                                "display": "Requested receipt reply pattern", 
                                "description": "Specifies the pattern to send the receipt signal. The default behavior is response."
                            }, 
                            {
                                "name": "EBMSOutboundReceptionAwarenessNotification", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to notify the message producer when the receipt for a sent message is not received", 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms3", 
                                                    "ebms3s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSOutboundRequestReceipt", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-reception-awareness-notification", 
                                "display": "Reception awareness error notification", 
                                "description": "Controls whether to send a reception awareness error notification to the ebMS3 message producer. The default behavior is off. The DataPower Gateway reports a reception awareness error to the message producer if the receipt signal message is not received for a sent message."
                            }, 
                            {
                                "name": "EBMSOutboundReceptionAwarenessTimeout", 
                                "default": 300, 
                                "type": {
                                    "href": "/mgmt/types/default/dmTimeInterval"
                                }, 
                                "maximum": 7200, 
                                "summary": "Maximum number of seconds to wait for the receipt", 
                                "minimum": 3, 
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-or", 
                                        "condition": [
                                            {
                                                "property-name": "DestURL", 
                                                "evaluation": "property-url-protocol-not-in-list", 
                                                "value": [
                                                    "ebms3", 
                                                    "ebms3s"
                                                ]
                                            }, 
                                            {
                                                "property-name": "EBMSOutboundRequestReceipt", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }, 
                                            {
                                                "property-name": "EBMSOutboundReceptionAwarenessNotification", 
                                                "evaluation": "property-equals", 
                                                "value": "off"
                                            }, 
                                            {
                                                "evaluation": "logical-and", 
                                                "condition": [
                                                    {
                                                        "property-name": "EBMSOutboundReceiptReplyPattern", 
                                                        "evaluation": "property-equals", 
                                                        "value": "Response"
                                                    }, 
                                                    {
                                                        "property-name": "EBMSMessageExchangePattern", 
                                                        "evaluation": "property-equals", 
                                                        "value": "one-way-push"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-reception-awareness-timeout", 
                                "display": "Reception awareness timeout", 
                                "description": "Specifies the maximum number of seconds to wait for the receipt signal. Enter a value in the range 3 - 7200. The default value is 300. If the DataPower Gateway does not receive the receipt signal message for a sent message after this time, the DataPower Gateway sends a reception awareness error notification to the message producer."
                            }, 
                            {
                                "name": "EBMSCompress", 
                                "default": "off", 
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                }, 
                                "summary": "Whether to compress messages", 
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "DestURL", 
                                        "evaluation": "property-url-protocol-not-in-list", 
                                        "value": [
                                            "ebms3", 
                                            "ebms3s"
                                        ]
                                    }
                                }, 
                                "cli-alias": "ebms-compress", 
                                "display": "Compress messages", 
                                "description": "Controls whether to compress the body of outbound ebMS messages. The default behavior is off."
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmB2BDestination"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmB2BDestination"
                    }
                }
            }, 
            "array": "true", 
            "cli-alias": "destination", 
            "display": "Destinations", 
            "description": "Defines routing information for the partner. The first destination is the default destination. The gateway uses the default destination when no specific destination is assigned or when no matching destination is found."
        }, 
        {
            "name": "InboundVerifyValCred", 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/CryptoValCred"
                }
            }, 
            "summary": "Validation credentials set", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "verify-valcred", 
            "display": "Inbound signature validation credentials", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "Sets the validation credentials set to verify the signature on an MDN or inbound AS message from this external partner."
        }, 
        {
            "name": "InboundRequireSigned", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to require a signature", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "require-signed", 
            "display": "Require signature", 
            "description": "Indicates whether inbound AS messages to this internal partner must be signed. The default behavior is off."
        }, 
        {
            "name": "InboundRequireEncrypted", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to require encryption", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "require-encrypted", 
            "display": "Require encryption", 
            "description": "Indicates whether inbound AS messages to this internal partner must be encrypted. If requiring encryption (on), set the identification credentials to decrypt inbound messages. The default behavior is off."
        }, 
        {
            "name": "InboundDecryptIdCred", 
            "required-when": {
                "condition": {
                    "evaluation": "logical-and", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }, 
                        {
                            "property-name": "InboundRequireEncrypted", 
                            "evaluation": "property-equals", 
                            "value": "on"
                        }
                    ]
                }
            }, 
            "summary": "Identification credentials set", 
            "cli-alias": "decrypt-idcred", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/CryptoIdentCred"
                }
            }, 
            "display": "Inbound decryption identification credentials", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "Sets the identification credentials set to decrypt inbound AS messages to this internal partner when requiring encryption."
        }, 
        {
            "name": "MDNSSLProxy", 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/SSLProxyProfile"
                }
            }, 
            "summary": "The MDN TLS proxy profile is deprecated. Use an MDN TLS client profile.", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "MDNSSLClientConfigType", 
                            "evaluation": "property-does-not-equal", 
                            "value": "proxy"
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }
                    ]
                }
            }, 
            "cli-alias": "mdn-ssl", 
            "display": "MDN TLS proxy profile (deprecated)", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "Sets the TLS proxy profile to establish a TLS-enabled, secured connection to external partners who request asynchronous MDNs sent to HTTPS addresses. This TLS proxy profile will be used for all HTTPS addresses in the inbound Receipt-Delivery-Option header. To specify a TLS proxy profile for specific URLs, configure a user agent for the XML manager associated with the gateway."
        }, 
        {
            "name": "OutboundSign", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to sign outbound messages", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "sign", 
            "display": "Sign outbound messages", 
            "description": "&lt;p>Controls whether to sign outbound messages from this internal partner. The default behavior is off.&lt;/p>&lt;ul>&lt;li>If enabled, signs outbound messages with the configured identification credentials and algorithm. If the configuration of a destination indicates to send messages unsigned, messages from this partner to that destination will not be signed.&lt;/li>&lt;li>If disabled, does not sign outbound messages.&lt;/li>&lt;/ul>&lt;p>This setting has no effect on outbound MDN messages. Regardless of this setting and if a partner requests a signed MDN, the outbound MDN is signed if this partner has a configured identification credentials.&lt;/p>"
        }, 
        {
            "name": "OutboundSignIdCred", 
            "required-when": {
                "condition": {
                    "evaluation": "logical-and", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }, 
                        {
                            "property-name": "OutboundSign", 
                            "evaluation": "property-equals", 
                            "value": "on"
                        }
                    ]
                }
            }, 
            "summary": "Credentials to sign outbound messages, and if requested, MDN messages.", 
            "cli-alias": "sign-idcred", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/CryptoIdentCred"
                }
            }, 
            "display": "Signing identification credentials", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "Sets the identification credentials set to sign an outbound message or outbound MDN from this internal partner when requiring a signature. The outbound MDN is signed if requested by a partner and this setting is configured."
        }, 
        {
            "name": "OutboundSignDigestAlg", 
            "default": "sha1", 
            "type": {
                "href": "/mgmt/types/default/dmCMSHashAlgorithm"
            }, 
            "summary": "Hash algorithm", 
            "/mgmt/types/default/dmCMSHashAlgorithm": {
                "type": {
                    "name": "dmCMSHashAlgorithm", 
                    "value-list": {
                        "value": [
                            {
                                "summary": "SHA-1 algorithm", 
                                "display": "sha1", 
                                "name": "sha1"
                            }, 
                            {
                                "summary": "MD5 algorithm", 
                                "display": "md5", 
                                "name": "md5"
                            }, 
                            {
                                "summary": "SHA-256 algorithm", 
                                "display": "sha256", 
                                "name": "sha256"
                            }, 
                            {
                                "summary": "SHA-384 algorithm", 
                                "display": "sha384", 
                                "name": "sha384"
                            }, 
                            {
                                "summary": "SHA-512 algorithm", 
                                "display": "sha512", 
                                "name": "sha512"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmCMSHashAlgorithm"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmCMSHashAlgorithm"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }, 
                        {
                            "property-name": "OutboundSign", 
                            "evaluation": "property-equals", 
                            "value": "off"
                        }
                    ]
                }
            }, 
            "cli-alias": "sign-digest-alg", 
            "display": "Signing digest algorithm", 
            "description": "Sets the hash algorithm for the signature on an outbound message from this internal partner when requiring a signature."
        }, 
        {
            "name": "OutboundSignMICAlgVersion", 
            "/mgmt/types/default/dmSMIMEVersion": {
                "type": {
                    "name": "dmSMIMEVersion", 
                    "value-list": {
                        "value": [
                            {
                                "summary": "S/MIME Version 3.1 (RFC 3851)", 
                                "display": "v3.1", 
                                "name": "SMIME3.1"
                            }, 
                            {
                                "summary": "S/MIME Version 3.2 (RFC 5751)", 
                                "display": "v3.2", 
                                "name": "SMIME3.2"
                            }
                        ]
                    }, 
                    "summary": "S/MIME Version"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmSMIMEVersion"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmSMIMEVersion"
                    }
                }
            }, 
            "summary": "Which S/MIME version's micalg parameter value format to use", 
            "cli-alias": "sign-micalg-version", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmSMIMEVersion"
            }, 
            "display": "Signing S/MIME version", 
            "description": "&lt;p>Specifies the S/MIME specification version to generate the desired format of \"micalg\" parameter values in a multipart/signed message. The following one is a sample Content-Type header of the multipart/signed message:&lt;/p>&lt;p>Content-Type: multipart/signed;protocol=\"application/pkcs7-signature\";micalg=sha1; boundary=...&lt;/p>&lt;p>The \"micalg\" parameter indicates which message digest algorithm (such as, MD5, SHA-1, SHA-256, SHA-384, and SHA-512) is used in the calculation of the Message Integrity Check (MIC). The formats of the micalg value differ between S/MIME Version 3.1 (RFC 3851) and Version 3.2 (RFC 5751).&lt;/p>&lt;ul>&lt;li>In Version 3.1, the micalg parameter value has micalg=[md5|sha1|sha256|sha384|sha512].&lt;/li>&lt;li>In Version 3.2, the micalg parameter value has micalg=[md5|sha-1|sha-256|sha-384|sha-512].&lt;/li>&lt;/ul>"
        }, 
        {
            "name": "Contacts", 
            "/mgmt/types/default/dmB2BContact": {
                "type": {
                    "name": "dmB2BContact", 
                    "properties": {
                        "property": [
                            {
                                "maximum-length": 128, 
                                "valid-regexp": "^[_a-zA-Z0-9-. ]+$", 
                                "description": "Specifies the family name of the person to contact. A family name is the surname borne by family members.", 
                                "summary": "Family name", 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "cli-alias": "family-name", 
                                "display": "Family Name", 
                                "name": "FamilyName"
                            }, 
                            {
                                "maximum-length": 128, 
                                "valid-regexp": "^[_a-zA-Z0-9-. ]+$", 
                                "description": "Specifies the given name of the person to contact. A given name is the name used to identify an individual within a family.", 
                                "summary": "Given name", 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "cli-alias": "given-name", 
                                "display": "Given Name", 
                                "name": "GivenName"
                            }, 
                            {
                                "maximum-length": 128, 
                                "valid-regexp": "^[_a-zA-Z0-9-. ]+$", 
                                "description": "Specifies the title of the person to contact.", 
                                "summary": "Title", 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "cli-alias": "title", 
                                "display": "Title", 
                                "name": "Title"
                            }, 
                            {
                                "maximum-length": 128, 
                                "valid-regexp": "^[(0-9][)0-9- ]+[0-9]$", 
                                "description": "Specifies the telephone number to use for the person to contact.", 
                                "summary": "Phone number", 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "cli-alias": "phone", 
                                "display": "Phone", 
                                "name": "Phone"
                            }, 
                            {
                                "maximum-length": 128, 
                                "valid-regexp": "^[_a-zA-Z0-9-.]+@[_a-zA-Z0-9.]+$", 
                                "description": "Specifies the e-mail address to use for the person to contact.", 
                                "summary": "E-mail address", 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "cli-alias": "email", 
                                "display": "E-mail", 
                                "name": "Email"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmB2BContact"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmB2BContact"
                    }
                }
            }, 
            "summary": "Contact information", 
            "type": {
                "href": "/mgmt/types/default/dmB2BContact"
            }, 
            "array": "true", 
            "cli-alias": "contact", 
            "display": "Contacts", 
            "description": "Specifies the contact information for the partner. To define the contact information, you must provide information for at least one of the properties."
        }, 
        {
            "/mgmt/types/default/dmString": {
                "type": {
                    "cli-arg": "string", 
                    "name": "dmString"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                }
            }, 
            "description": "&lt;p>Overrides the identifiers for the partner in AS message headers.&lt;/p>&lt;ul>&lt;li>For outbound messages, the value to use for the &lt;tt>AS*-From&lt;/tt> or &lt;tt>AS*-To&lt;/tt> header, where * is 1, 2, or 3. If blank, the transaction retains the identifiers that were extracted from the message payload.&lt;/li>&lt;li>For inbound messages, the value becomes another valid identifier for the partner in addition to those already defined for the partner.&lt;/li>&lt;/ul>", 
            "cli-alias": "override-as-identifier", 
            "summary": "Override AS identifier", 
            "type": {
                "href": "/mgmt/types/default/dmString"
            }, 
            "display": "Override AS identifier", 
            "name": "OverrideASID"
        }, 
        {
            "/mgmt/types/default/dmAllowDuplicateMessage": {
                "type": {
                    "name": "dmAllowDuplicateMessage", 
                    "value-list": {
                        "value": [
                            {
                                "summary": "Never allow or reprocess a duplicate message.", 
                                "display": "Never", 
                                "name": "never"
                            }, 
                            {
                                "summary": "Always allow and reprocess a duplicate message. The DataPower Gateway uses a new record for the reprocessed transaction instead of updating the record for the previous transaction.", 
                                "display": "Always", 
                                "name": "always"
                            }, 
                            {
                                "summary": "Allow and reprocess a duplicate message only when an error occurs during the previous transaction. The error excludes failures in sending asynchronous MDN, ACK, or Receipt.", 
                                "display": "On error", 
                                "name": "on-error"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmAllowDuplicateMessage"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmAllowDuplicateMessage"
                    }
                }
            }, 
            "name": "ASAllowDuplicateMessage", 
            "default": "never", 
            "type": {
                "href": "/mgmt/types/default/dmAllowDuplicateMessage"
            }, 
            "summary": "When to allow and reprocess duplicate AS inbound messages", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "as-allow-dup-msg", 
            "display": "Allow duplicate AS inbound message", 
            "description": "Controls when to allow and reprocess duplicate AS inbound messages. The default behavior is never. This option does not apply to MDN."
        }, 
        {
            "name": "PreserveFilename", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to expose the Content-Disposition header of inbound AS messages for filename preservation", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "preserve-filename", 
            "display": "Preserve filename", 
            "description": "According to RFC 2183, the file name information is optional in Content-Disposition header. When enabled, the Content-Disposition header of the inbound AS message is exposed if the inbound AS message is in S/MIME format. Then, the receiving partner can retrieve the original file name that is contained in the header and transfer the received file to its backend system with the received file name."
        }, 
        {
            "/mgmt/types/default/dmString": {
                "type": {
                    "cli-arg": "string", 
                    "name": "dmString"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                }
            }, 
            "description": "Specifies the name of authorized role of the party. When sending outbound message, the role associated with internal partner presents the From party and the role associated with external partner presents the To party, respectively. The value is referencing to the Role specified in CPA. A Role is better defined as a URI, for example, http://rosettanet.org/roles/buyer.", 
            "cli-alias": "ebms-role", 
            "summary": "Name of role", 
            "type": {
                "href": "/mgmt/types/default/dmString"
            }, 
            "display": "Role", 
            "name": "EBMSRole"
        }, 
        {
            "/mgmt/types/default/dmUInt32": {
                "type": {
                    "cli-arg": "number", 
                    "minimum": 0, 
                    "name": "dmUInt32", 
                    "maximum": "0xFFFFFFFF"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmUInt32"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmUInt32"
                    }
                }
            }, 
            "name": "EBMSPersistDuration", 
            "default": 0, 
            "type": {
                "href": "/mgmt/types/default/dmUInt32"
            }, 
            "maximum": 6000000, 
            "summary": "Duration of message to be persisted", 
            "minimum": 0, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "units": "Seconds", 
            "cli-alias": "ebms-persist-duration", 
            "display": "Persist duration", 
            "description": "The time, which can be obtained from a CPA, indicates to the receiving partner the minimum length of time the message should be kept in persistent storage. When receiving inbound message, the Persist Duration is used to compute the expiry time using the formula: Time to Persist = Persist Duration + Current Time. When a message is not expired, it is not eligible to be archived; once a message's expiry time has elapsed, the message will be archivable when performing archive operation. Default to 0 to expire the received document at the time we receive the document."
        }, 
        {
            "name": "EBMSAckURL", 
            "type": {
                "href": "/mgmt/types/default/dmURL"
            }, 
            "locations": {
                "location": "\"NONE\""
            }, 
            "summary": "Redirection URL for sending an asynchronous ebMS2 Acknowledgment Message", 
            "/mgmt/types/default/dmURL": {
                "type": {
                    "cli-arg": "url", 
                    "name": "dmURL"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmURL"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmURL"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms-ack-url", 
            "display": "Acknowledgment URL", 
            "protocols": {
                "protocol": [
                    "http", 
                    "https"
                ]
            }, 
            "description": "Specifies the redirection URL where to send the Acknowledgment message when received ebMS2 message requests for asynchronous response. When an asynchronous reply is requested by the inbound ebMS2 document, this field is required to determine where to send the acknowledgment. Though optional, it is recommended to set the URL."
        }, 
        {
            "type": {
                "href": "/mgmt/types/default/dmURL"
            }, 
            "name": "EBMSErrorURL", 
            "required-when": {
                "condition": {
                    "property-name": "EBMSAckURL", 
                    "evaluation": "property-does-not-equal", 
                    "value": ""
                }
            }, 
            "locations": {
                "location": "\"NONE\""
            }, 
            "summary": "Redirection URL for sending an asynchronous ebMS2 Error Message", 
            "/mgmt/types/default/dmURL": {
                "type": {
                    "cli-arg": "url", 
                    "name": "dmURL"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmURL"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmURL"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms-error-url", 
            "display": "Error URL", 
            "protocols": {
                "protocol": [
                    "http", 
                    "https"
                ]
            }, 
            "description": "Specifies the redirection URL where to report the Error message when received ebMS2 message requests for asynchronous response. When an asynchronous reply is requested by the inbound ebMS2 document, this field is used as the error reporting location to send the error message - which contains the error code such as MimeProblem, and the description of the problem - when any problem occurs. Error URL should not be empty if the Acknowledgment URL is specified."
        }, 
        {
            "name": "EBMSInboundSendReceipt", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to reply with a receipt", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms-inbound-send-receipt", 
            "display": "Reply with receipt", 
            "description": "Controls whether to reply to the sending MSH with a receipt signal message for the received ebMS messages. The default behavior is off."
        }, 
        {
            "name": "EBMSInboundSendSignedReceipt", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to reply with signed receipt", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }, 
                        {
                            "property-name": "EBMSInboundSendReceipt", 
                            "evaluation": "property-equals", 
                            "value": "off"
                        }
                    ]
                }
            }, 
            "cli-alias": "ebms-inbound-send-signed-receipt", 
            "display": "Reply with signed receipt", 
            "description": "Controls whether to reply to the sending MSH with a signed receipt signal message for the received ebMS3 message. The default behavior is off."
        }, 
        {
            "name": "EBMSInboundReceiptReplyPattern", 
            "default": "Response", 
            "type": {
                "href": "/mgmt/types/default/dmEBMSReplyPattern"
            }, 
            "/mgmt/types/default/dmEBMSReplyPattern": {
                "type": {
                    "name": "dmEBMSReplyPattern", 
                    "value-list": {
                        "value": [
                            {
                                "summary": "Request for synchronous reply of receipt and error signal", 
                                "display": "Response", 
                                "name": "Response", 
                                "description": "Request the receiver to send the receipt and error signal messages over a synchronous connection."
                            }, 
                            {
                                "summary": "Request for asynchronous reply of receipt and error signal", 
                                "display": "Callback", 
                                "name": "Callback", 
                                "description": "Request the receiver to send the receipt and error signal messages over an asynchronous connection."
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmEBMSReplyPattern"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmEBMSReplyPattern"
                    }
                }
            }, 
            "summary": "Specify the pattern to send the receipt signal.", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }, 
                        {
                            "property-name": "EBMSInboundSendReceipt", 
                            "evaluation": "property-equals", 
                            "value": "off"
                        }
                    ]
                }
            }, 
            "cli-alias": "ebms-inbound-receipt-reply-pattern", 
            "display": "Receipt reply pattern", 
            "description": "Specifies the pattern to send the receipt signal. The default behavior is response."
        }, 
        {
            "type": {
                "href": "/mgmt/types/default/dmURL"
            }, 
            "name": "EBMSReceiptURL", 
            "required-when": {
                "condition": {
                    "evaluation": "logical-and", 
                    "condition": [
                        {
                            "property-name": "EBMSInboundSendReceipt", 
                            "evaluation": "property-equals", 
                            "value": "on"
                        }, 
                        {
                            "property-name": "EBMSInboundReceiptReplyPattern", 
                            "evaluation": "property-equals", 
                            "value": "Callback"
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }
                    ]
                }
            }, 
            "locations": {
                "location": "\"NONE\""
            }, 
            "summary": "Receipt URL", 
            "/mgmt/types/default/dmURL": {
                "type": {
                    "cli-arg": "url", 
                    "name": "dmURL"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmURL"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmURL"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }, 
                        {
                            "property-name": "EBMSInboundReceiptReplyPattern", 
                            "evaluation": "property-equals", 
                            "value": "Response"
                        }, 
                        {
                            "property-name": "EBMSInboundSendReceipt", 
                            "evaluation": "property-equals", 
                            "value": "off"
                        }
                    ]
                }
            }, 
            "cli-alias": "ebms-receipt-url", 
            "display": "Receipt URL", 
            "protocols": {
                "protocol": [
                    "http", 
                    "https"
                ]
            }, 
            "description": "When the receipt reply pattern is callback, specify the URL to send the receipt signal to."
        }, 
        {
            "type": {
                "href": "/mgmt/types/default/dmURL"
            }, 
            "name": "EBMSInboundErrorURL", 
            "required-when": {
                "condition": {
                    "evaluation": "logical-and", 
                    "condition": [
                        {
                            "property-name": "EBMSInboundSendReceipt", 
                            "evaluation": "property-equals", 
                            "value": "on"
                        }, 
                        {
                            "property-name": "EBMSInboundReceiptReplyPattern", 
                            "evaluation": "property-equals", 
                            "value": "Callback"
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }
                    ]
                }
            }, 
            "locations": {
                "location": "\"NONE\""
            }, 
            "summary": "Error URL", 
            "/mgmt/types/default/dmURL": {
                "type": {
                    "cli-arg": "url", 
                    "name": "dmURL"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmURL"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmURL"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms-inbound-error-url", 
            "display": "Error URL", 
            "protocols": {
                "protocol": [
                    "http", 
                    "https"
                ]
            }, 
            "description": "When the error is sent asynchronously, specify the URL to send the error signal to."
        }, 
        {
            "name": "EBMSInboundVerifyValCred", 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/CryptoValCred"
                }
            }, 
            "summary": "Validation credentials set", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms-verify-valcred", 
            "display": "Inbound signature validation credentials", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "Sets the validation credentials set to verify the signature on an Acknowledgment or inbound ebMS2 message from this external partner. For ebMS2 messages, the DataPower Gateway supports only &lt;tt>X509Data&lt;/tt> and &lt;tt>KeyName&lt;/tt> signature methods."
        }, 
        {
            "name": "EBMSDefaultSignerCert", 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/CryptoCertificate"
                }
            }, 
            "summary": "Default validation certificate used to verify the signature of inbound message", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms-default-signer-cert", 
            "display": "Default inbound signature validation certificate", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "Set the default validation certificate to verify the signature of an inbound ebMS2 message or an acknowledgment. The default signature validation certificate is used if either keyInfo element is missing or signature method is unsupported."
        }, 
        {
            "name": "EBMSAckSSLProxy", 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/SSLProxyProfile"
                }
            }, 
            "summary": "The Acknowledgment/Error TLS proxy profile is deprecated. Use an Acknowledgment/Error TLS client profile.", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "EBMSAckSSLClientConfigType", 
                            "evaluation": "property-does-not-equal", 
                            "value": "proxy"
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }
                    ]
                }
            }, 
            "cli-alias": "ebms-ack-ssl", 
            "display": "Acknowledgment/Error TLS proxy profile (deprecated)", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "Sets the TLS proxy profile to establish a TLS-enabled, secured connection to external partners who request asynchronous reply (the response can be an Acknowledgment or an Error Message) sent to HTTPS addresses. To specify a TLS proxy profile for specific URLs, configure a user agent for the XML manager associated with the gateway."
        }, 
        {
            "name": "EBMSInboundRequireSigned", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to require a signature", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "ebms-require-signed", 
            "display": "Require signature", 
            "description": "Indicates whether inbound ebMS2 messages to this internal partner must be signed. The default behavior is off."
        }, 
        {
            "name": "EBMSInboundRequireEncrypted", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to require encryption", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "ebms-require-encrypted", 
            "display": "Require encryption", 
            "description": "Indicates whether inbound ebMS2 messages to this internal partner must be encrypted. If requiring encryption (on), set the identification credentials to decrypt inbound ebMS2 messages. The default behavior is off."
        }, 
        {
            "name": "EBMSInboundDecryptIdCred", 
            "required-when": {
                "condition": {
                    "evaluation": "logical-and", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }, 
                        {
                            "property-name": "EBMSInboundRequireEncrypted", 
                            "evaluation": "property-equals", 
                            "value": "on"
                        }
                    ]
                }
            }, 
            "summary": "Identification credentials set", 
            "cli-alias": "ebms-decrypt-idcred", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/CryptoIdentCred"
                }
            }, 
            "display": "Inbound decryption identification credentials", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "Sets the identification credentials set to decrypt inbound ebMS2 messages to this internal partner when requiring encryption."
        }, 
        {
            "name": "EBMSOutboundSign", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to sign outbound messages", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "ebms-sign", 
            "display": "Sign outbound messages", 
            "description": "&lt;p>Controls whether to sign outbound messages from this internal partner. The default behavior is off.&lt;/p>&lt;ul>&lt;li>If enabled, signs outbound messages with the configured identification credentials and algorithm. If the configuration of a destination indicates to send messages unsigned, messages from this partner to that destination will not be signed.&lt;/li>&lt;li>If disabled, does not sign outbound messages.&lt;/li>&lt;/ul>&lt;p>This setting has no effect on outbound Acknowledgment messages. Regardless of this setting and if a partner requests a signed Ack, the outbound Acknowledgment is signed if this partner has a configured identification credentials.&lt;/p>"
        }, 
        {
            "name": "EBMSOutboundSignIdCred", 
            "required-when": {
                "condition": {
                    "evaluation": "logical-and", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }, 
                        {
                            "property-name": "EBMSOutboundSign", 
                            "evaluation": "property-equals", 
                            "value": "on"
                        }
                    ]
                }
            }, 
            "summary": "Credentials to sign outbound messages, and if requested, Acknowledgment messages", 
            "cli-alias": "ebms-sign-idcred", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/CryptoIdentCred"
                }
            }, 
            "display": "Signing identification credentials", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "&lt;p>Sets the identification credentials set to sign an outbound message or outbound Acknowledgment from this internal partner when requiring a signature. The outbound Acknowledgment is signed if requested by a partner and this setting is configured.&lt;/p>&lt;p>For ebMS2 messages, the DataPower Gateway supports only &lt;tt>X509Data&lt;/tt> and &lt;tt>KeyName&lt;/tt> signature methods.&lt;/p>"
        }, 
        {
            "name": "EBMSOutboundSignatureAlg", 
            "default": "dsa-sha1", 
            "type": {
                "href": "/mgmt/types/default/dmEBMSSignatureAlgorithm"
            }, 
            "/mgmt/types/default/dmEBMSSignatureAlgorithm": {
                "type": {
                    "name": "dmEBMSSignatureAlgorithm", 
                    "value-list": {
                        "value": [
                            {
                                "display": "dsa-sha1", 
                                "name": "dsa-sha1", 
                                "description": "http://www.w3.org/2000/09/xmldsig#dsa-sha1"
                            }, 
                            {
                                "display": "rsa-sha1", 
                                "name": "rsa-sha1", 
                                "description": "http://www.w3.org/2000/09/xmldsig#rsa-sha1"
                            }, 
                            {
                                "display": "rsa-sha256", 
                                "name": "rsa-sha256", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"
                            }, 
                            {
                                "display": "rsa-sha384", 
                                "name": "rsa-sha384", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#rsa-sha384"
                            }, 
                            {
                                "display": "rsa-sha512", 
                                "name": "rsa-sha512", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#rsa-sha512"
                            }, 
                            {
                                "display": "rsa-ripemd160", 
                                "name": "rsa-ripemd160", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more/rsa-ripemd160"
                            }, 
                            {
                                "display": "rsa-ripemd160-2010", 
                                "name": "rsa-ripemd160-2010", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#rsa-ripemd160"
                            }, 
                            {
                                "display": "rsa-md5", 
                                "name": "rsa-md5", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#rsa-md5"
                            }
                        ]
                    }, 
                    "display": "Signing Algorithm"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmEBMSSignatureAlgorithm"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmEBMSSignatureAlgorithm"
                    }
                }
            }, 
            "summary": "Signature algorithm used to sign outbound message", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }, 
                        {
                            "property-name": "EBMSOutboundSign", 
                            "evaluation": "property-equals", 
                            "value": "off"
                        }
                    ]
                }
            }, 
            "cli-alias": "ebms-signature-alg", 
            "display": "Signature algorithm", 
            "description": "Sets the algorithm used to sign the outbound ebMS2 message from this internal partner. The default value is dsa-sha1, which is recommended by the ebMS specification."
        }, 
        {
            "name": "EBMSOutboundSignatureC14NAlg", 
            "default": "c14n", 
            "type": {
                "href": "/mgmt/types/default/dmCryptoCanonicalizationAlgorithm"
            }, 
            "/mgmt/types/default/dmCryptoCanonicalizationAlgorithm": {
                "type": {
                    "name": "dmCryptoCanonicalizationAlgorithm", 
                    "display": "Canonicalization Algorithm", 
                    "value-list": {
                        "value": [
                            {
                                "summary": "Inclusive XML Canonicalization, version 1.0 (c14n)", 
                                "display": "XML Canonicalization, version 1.0", 
                                "name": "c14n"
                            }, 
                            {
                                "summary": "Exclusive XML Canonicalization (exc-c14n)", 
                                "display": "Exclusive XML Canonicalization", 
                                "name": "exc-c14n"
                            }, 
                            {
                                "summary": "Inclusive XML Canonicalization, version 1.0, with comments (c14n-comments)", 
                                "display": "XML Canonicalization with Comments, version 1.0", 
                                "name": "c14n-comments"
                            }, 
                            {
                                "summary": "Exclusive XML Canonicalization with comments (exc-c14n-comments)", 
                                "display": "Exclusive XML Canonicalization with Comments", 
                                "name": "exc-c14n-comments"
                            }, 
                            {
                                "summary": "Inclusive XML Canonicalization, version 1.1 (c14n11)", 
                                "display": "XML Canonicalization, version 1.1", 
                                "name": "c14n11"
                            }, 
                            {
                                "summary": "Inclusive XML Canonicalization, version 1.1, with comments (c14n11-comments)", 
                                "display": "XML Canonicalization with Comments, version 1.1", 
                                "name": "c14n11-comments"
                            }
                        ]
                    }, 
                    "description": "The XML canonicalization algorithm and version used for signing."
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmCryptoCanonicalizationAlgorithm"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmCryptoCanonicalizationAlgorithm"
                    }
                }
            }, 
            "summary": "Signature canonicalization algorithm used before signing outbound message", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }, 
                        {
                            "property-name": "EBMSOutboundSign", 
                            "evaluation": "property-equals", 
                            "value": "off"
                        }
                    ]
                }
            }, 
            "cli-alias": "ebms-signature-c14n-alg", 
            "display": "Signature canonicalization method", 
            "description": "Sets the algorithm used to canonicalize the SOAP Envelope XML and exclude comments before signing outbound ebMS2 message. The default value is c14n, which is recommended by the ebMS specification."
        }, 
        {
            "name": "EBMSOutboundSignDigestAlg", 
            "default": "sha1", 
            "type": {
                "href": "/mgmt/types/default/dmCryptoHashAlgorithm"
            }, 
            "summary": "Digest algorithm used in the XML Signature when hashing the payloads during signing.", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }, 
                        {
                            "property-name": "EBMSOutboundSign", 
                            "evaluation": "property-equals", 
                            "value": "off"
                        }
                    ]
                }
            }, 
            "/mgmt/types/default/dmCryptoHashAlgorithm": {
                "type": {
                    "name": "dmCryptoHashAlgorithm", 
                    "display": "Message Digest Algorithm", 
                    "value-list": {
                        "value": [
                            {
                                "display": "sha1", 
                                "name": "sha1", 
                                "description": "http://www.w3.org/2000/09/xmldsig#sha1"
                            }, 
                            {
                                "display": "sha256", 
                                "name": "sha256", 
                                "description": "http://www.w3.org/2001/04/xmlenc#sha256"
                            }, 
                            {
                                "display": "sha512", 
                                "name": "sha512", 
                                "description": "http://www.w3.org/2001/04/xmlenc#sha512"
                            }, 
                            {
                                "display": "ripemd160", 
                                "name": "ripemd160", 
                                "description": "http://www.w3.org/2001/04/xmlenc#ripemd160"
                            }, 
                            {
                                "display": "sha224", 
                                "name": "sha224", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#sha224"
                            }, 
                            {
                                "display": "sha384", 
                                "name": "sha384", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#sha384"
                            }, 
                            {
                                "display": "md5", 
                                "name": "md5", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#md5"
                            }
                        ]
                    }, 
                    "description": "The hash algorithm for the generated message digest."
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmCryptoHashAlgorithm"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmCryptoHashAlgorithm"
                    }
                }
            }, 
            "cli-alias": "ebms-sign-digest-alg", 
            "display": "Signing digest algorithm", 
            "description": "Sets the algorithm used to hashing the payloads during signing. The default value is sha1. See http://www.w3.org/TR/xmldsig-core/"
        }, 
        {
            "name": "EBMSEnableCPABinding", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to enable CPA bindings", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms-enable-cpa-bindings", 
            "display": "Enable CPA bindings", 
            "description": "When enabled, the CPA, service, and action that are specified by the matched CPA binding are used for the outbound ebMS2 messages instead of the default CPA, service, and action of the external profile. The CPA binding is matched by the internal partner profile."
        }, 
        {
            "name": "EBMSProfileCPABindings", 
            "type": {
                "href": "/mgmt/types/default/dmProfileCPABinding"
            }, 
            "/mgmt/types/default/dmProfileCPABinding": {
                "type": {
                    "property-group": {
                        "member": [
                            "", 
                            "", 
                            "", 
                            ""
                        ], 
                        "name": "summary", 
                        "display": "Summary"
                    }, 
                    "name": "dmProfileCPABinding", 
                    "properties": {
                        "property": [
                            {
                                "name": "InternalPartner", 
                                "cli-alias": "internal-partner", 
                                "required": "true", 
                                "summary": "Name of the CPA sender (internal partner profile)", 
                                "subtype": "dmB2BInternalProfile", 
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/B2BProfile"
                                    }
                                }, 
                                "display": "CPA sender (Internal Partner Profile)", 
                                "description": "Indicates the name of the CPA sender (internal partner profile). Outbound ebMS2 messages from an internal partner use the CPA, service, and action that are specified by the CPA binding associated with the internal partner profile."
                            }, 
                            {
                                "name": "CPA", 
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/B2BCPA"
                                    }
                                }, 
                                "required": "true", 
                                "summary": "CPA ID", 
                                "cli-alias": "cpa", 
                                "display": "CPA", 
                                "description": "Indicates the CPA to use. This value overrides the default CPA ID of the external partner profile configuration."
                            }, 
                            {
                                "name": "Collaboration", 
                                "type": {
                                    "href": "/mgmt/types/default/dmReference", 
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/B2BCPACollaboration"
                                    }
                                }, 
                                "required": "true", 
                                "summary": "Value of Service element in outbound ebMS2 request", 
                                "cli-alias": "collaboration", 
                                "display": "Service", 
                                "description": "Indicates the service to use. This value overrides the default service of the external partner profile configuration."
                            }, 
                            {
                                "description": "Indicates the action to use. This value overrides the default action of the external partner profile configuration. When the action is not set or the action is not defined in the service of the CPA binding, the B2B Gateway uses the first action in the action list of the service.", 
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                }, 
                                "summary": "Action", 
                                "cli-alias": "action", 
                                "display": "Action", 
                                "name": "Action"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmProfileCPABinding"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmProfileCPABinding"
                    }
                }
            }, 
            "summary": "CPA Bindings", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }, 
                        {
                            "property-name": "EBMSEnableCPABinding", 
                            "evaluation": "property-equals", 
                            "value": "off"
                        }
                    ]
                }
            }, 
            "array": "true", 
            "cli-alias": "profile-cpa-binding", 
            "display": "CPA Bindings", 
            "description": "Specifies the CPA binding that you prefer to use to the external partner profile. A CPA binding binds a CPA entry (CPA, service, and action) that you prefer to use. When a CPA entry is matched through the internal partner profile, outbound messages from the internal partner use the CPA, service, and action that are specified by the matched CPA entry. You must have defined the CPA entry in the ebXML settings of the associated B2B Gateway before you add the entry to the CPA bindings list."
        }, 
        {
            "/mgmt/types/default/dmString": {
                "type": {
                    "cli-arg": "string", 
                    "name": "dmString"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                }
            }, 
            "name": "EBMSCpaId", 
            "cli-alias": "ebms-cpa-id", 
            "summary": "Default CPA ID", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmString"
            }, 
            "display": "Default CPA ID", 
            "description": "Sets the CPAId to be packaged in the outbound ebMS2 message header. This value is the default CPA ID to use when the B2B Gateway is CPA-enforced."
        }, 
        {
            "/mgmt/types/default/dmString": {
                "type": {
                    "cli-arg": "string", 
                    "name": "dmString"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                }
            }, 
            "name": "EBMSService", 
            "cli-alias": "ebms-service", 
            "summary": "Default service", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmString"
            }, 
            "display": "Default service", 
            "description": "Sets the service to be packaged in the outbound ebMS2 message header. This value is the default service to use when the B2B Gateway is CPA-enforced."
        }, 
        {
            "/mgmt/types/default/dmString": {
                "type": {
                    "cli-arg": "string", 
                    "name": "dmString"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                }
            }, 
            "name": "EBMSAction", 
            "cli-alias": "ebms-action", 
            "summary": "Default action", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmString"
            }, 
            "display": "Default action", 
            "description": "Sets the action to be packaged in the outbound ebMS2 message header. This value is the default action to use when the B2B Gateway is CPA-enforced."
        }, 
        {
            "name": "EBMSStartParameter", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Generate the start parameter when creating the content-type header of an outbound ebMS2 message.", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "cli-alias": "ebms-start-parameter", 
            "display": "Generate start parameter", 
            "description": "Indicates whether to generate a start parameter for the ebMS2 message. The start parameter identifies the root part of the ebMS message. This setting is disabled by default. If enabled, the DataPower Gateway generates a start parameter with its value enclosed in angle brackets."
        }, 
        {
            "/mgmt/types/default/dmAllowDuplicateMessage": {
                "type": {
                    "name": "dmAllowDuplicateMessage", 
                    "value-list": {
                        "value": [
                            {
                                "summary": "Never allow or reprocess a duplicate message.", 
                                "display": "Never", 
                                "name": "never"
                            }, 
                            {
                                "summary": "Always allow and reprocess a duplicate message. The DataPower Gateway uses a new record for the reprocessed transaction instead of updating the record for the previous transaction.", 
                                "display": "Always", 
                                "name": "always"
                            }, 
                            {
                                "summary": "Allow and reprocess a duplicate message only when an error occurs during the previous transaction. The error excludes failures in sending asynchronous MDN, ACK, or Receipt.", 
                                "display": "On error", 
                                "name": "on-error"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmAllowDuplicateMessage"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmAllowDuplicateMessage"
                    }
                }
            }, 
            "name": "EBMSAllowDuplicateMessage", 
            "default": "never", 
            "type": {
                "href": "/mgmt/types/default/dmAllowDuplicateMessage"
            }, 
            "summary": "When to allow and reprocess duplicate ebMS inbound messages", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms-allow-dup-msg", 
            "display": "Allow duplicate ebMS2 inbound message", 
            "description": "Controls when to allow and reprocess duplicate ebMS2 inbound messages. The default behavior is never. This option does not apply to ACK."
        }, 
        {
            "name": "MDNSSLClientConfigType", 
            "/mgmt/types/default/dmSSLClientConfigType": {
                "type": {
                    "name": "dmSSLClientConfigType", 
                    "value-list": {
                        "value": [
                            {
                                "name": "proxy", 
                                "display": "Proxy Profile"
                            }, 
                            {
                                "name": "client", 
                                "display": "Client Profile"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmSSLClientConfigType"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmSSLClientConfigType"
                    }
                }
            }, 
            "default": "proxy", 
            "type": {
                "href": "/mgmt/types/default/dmSSLClientConfigType"
            }, 
            "summary": "Set the TLS profile type to secure connections between the DataPower Gateway and its targets", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "mdn-ssl-client-type", 
            "display": "MDN TLS client type", 
            "description": "The TLS profile type to secure connections between the DataPower Gateway and its targets."
        }, 
        {
            "name": "MDNSSLClient", 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/SSLClientProfile"
                }
            }, 
            "summary": "Set the TLS client profile to secure connections between the DataPower Gateway and its targets", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "MDNSSLClientConfigType", 
                            "evaluation": "property-does-not-equal", 
                            "value": "client"
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }
                    ]
                }
            }, 
            "cli-alias": "mdn-ssl-client", 
            "display": "MDN TLS client profile", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "The TLS client profile to secure connections between the DataPower Gateway and its targets."
        }, 
        {
            "name": "EBMSAckSSLClientConfigType", 
            "/mgmt/types/default/dmSSLClientConfigType": {
                "type": {
                    "name": "dmSSLClientConfigType", 
                    "value-list": {
                        "value": [
                            {
                                "name": "proxy", 
                                "display": "Proxy Profile"
                            }, 
                            {
                                "name": "client", 
                                "display": "Client Profile"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmSSLClientConfigType"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmSSLClientConfigType"
                    }
                }
            }, 
            "default": "proxy", 
            "type": {
                "href": "/mgmt/types/default/dmSSLClientConfigType"
            }, 
            "summary": "Set the TLS profile type to secure connections between the DataPower Gateway and its targets", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebmsack-ssl-client-type", 
            "display": "Acknowledgment/Error TLS client type", 
            "description": "The TLS profile type to secure connections between the DataPower Gateway and its targets."
        }, 
        {
            "name": "EBMSAckSSLClient", 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/SSLClientProfile"
                }
            }, 
            "summary": "Set the TLS client profile to secure connections between the DataPower Gateway and its targets", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "EBMSAckSSLClientConfigType", 
                            "evaluation": "property-does-not-equal", 
                            "value": "client"
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }
                    ]
                }
            }, 
            "cli-alias": "ebmsack-ssl-client", 
            "display": "Acknowledgment/Error TLS client profile", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "The TLS client profile to secure connections between the DataPower Gateway and its targets."
        }, 
        {
            "name": "EBMS3OutboundSign", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to sign outbound messages", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "ebms3-sign", 
            "display": "Sign outbound messages", 
            "description": "&lt;p>Controls whether to sign outbound messages from this internal partner. The default behavior is off.&lt;/p>&lt;ul>&lt;li>When enabled, signs outbound messages with the configured identification credentials and algorithm. If the configuration of a destination indicates to send messages unsigned, messages from this partner to that destination will not be signed.&lt;/li>&lt;li>When disabled, does not sign outbound messages.&lt;/li>&lt;/ul>&lt;p>This setting has no effect on outbound receipt signal messages. Regardless of this setting and whether an external partner requests a signed receipt signal, the outbound receipt signal is signed when this internal partner has a configured identification credentials.&lt;/p>"
        }, 
        {
            "name": "EBMS3OutboundSignIdCred", 
            "required-when": {
                "condition": {
                    "evaluation": "logical-and", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }, 
                        {
                            "property-name": "EBMS3OutboundSign", 
                            "evaluation": "property-equals", 
                            "value": "on"
                        }
                    ]
                }
            }, 
            "summary": "Credentials to sign outbound messages, and if requested, receipt signal messages", 
            "cli-alias": "ebms3-sign-idcred", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/CryptoIdentCred"
                }
            }, 
            "display": "Signing identification credentials", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "Sets the identification credentials set to sign an outbound message or outbound receipt signal from this internal partner when requiring a signature. The outbound receipt signal is signed if requested by a partner and this setting is configured."
        }, 
        {
            "name": "EBMS3OutboundSignDigestAlg", 
            "default": "sha1", 
            "type": {
                "href": "/mgmt/types/default/dmCryptoHashAlgorithm"
            }, 
            "summary": "Digest algorithm to use in the XML Signature when hashing the payloads during signing", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }, 
                        {
                            "property-name": "EBMS3OutboundSign", 
                            "evaluation": "property-equals", 
                            "value": "off"
                        }
                    ]
                }
            }, 
            "/mgmt/types/default/dmCryptoHashAlgorithm": {
                "type": {
                    "name": "dmCryptoHashAlgorithm", 
                    "display": "Message Digest Algorithm", 
                    "value-list": {
                        "value": [
                            {
                                "display": "sha1", 
                                "name": "sha1", 
                                "description": "http://www.w3.org/2000/09/xmldsig#sha1"
                            }, 
                            {
                                "display": "sha256", 
                                "name": "sha256", 
                                "description": "http://www.w3.org/2001/04/xmlenc#sha256"
                            }, 
                            {
                                "display": "sha512", 
                                "name": "sha512", 
                                "description": "http://www.w3.org/2001/04/xmlenc#sha512"
                            }, 
                            {
                                "display": "ripemd160", 
                                "name": "ripemd160", 
                                "description": "http://www.w3.org/2001/04/xmlenc#ripemd160"
                            }, 
                            {
                                "display": "sha224", 
                                "name": "sha224", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#sha224"
                            }, 
                            {
                                "display": "sha384", 
                                "name": "sha384", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#sha384"
                            }, 
                            {
                                "display": "md5", 
                                "name": "md5", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#md5"
                            }
                        ]
                    }, 
                    "description": "The hash algorithm for the generated message digest."
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmCryptoHashAlgorithm"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmCryptoHashAlgorithm"
                    }
                }
            }, 
            "cli-alias": "ebms3-sign-digest-alg", 
            "display": "Signing digest algorithm", 
            "description": "Sets the algorithm to use to hash the payloads during signing. The default value is sha1. See http://www.w3.org/TR/xmldsig-core/"
        }, 
        {
            "name": "EBMS3OutboundSignatureAlg", 
            "default": "rsa-sha1", 
            "type": {
                "href": "/mgmt/types/default/dmEBMSSignatureAlgorithm"
            }, 
            "/mgmt/types/default/dmEBMSSignatureAlgorithm": {
                "type": {
                    "name": "dmEBMSSignatureAlgorithm", 
                    "value-list": {
                        "value": [
                            {
                                "display": "dsa-sha1", 
                                "name": "dsa-sha1", 
                                "description": "http://www.w3.org/2000/09/xmldsig#dsa-sha1"
                            }, 
                            {
                                "display": "rsa-sha1", 
                                "name": "rsa-sha1", 
                                "description": "http://www.w3.org/2000/09/xmldsig#rsa-sha1"
                            }, 
                            {
                                "display": "rsa-sha256", 
                                "name": "rsa-sha256", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"
                            }, 
                            {
                                "display": "rsa-sha384", 
                                "name": "rsa-sha384", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#rsa-sha384"
                            }, 
                            {
                                "display": "rsa-sha512", 
                                "name": "rsa-sha512", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#rsa-sha512"
                            }, 
                            {
                                "display": "rsa-ripemd160", 
                                "name": "rsa-ripemd160", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more/rsa-ripemd160"
                            }, 
                            {
                                "display": "rsa-ripemd160-2010", 
                                "name": "rsa-ripemd160-2010", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#rsa-ripemd160"
                            }, 
                            {
                                "display": "rsa-md5", 
                                "name": "rsa-md5", 
                                "description": "http://www.w3.org/2001/04/xmldsig-more#rsa-md5"
                            }
                        ]
                    }, 
                    "display": "Signing Algorithm"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmEBMSSignatureAlgorithm"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmEBMSSignatureAlgorithm"
                    }
                }
            }, 
            "summary": "Signature algorithm to use to sign outbound message", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }, 
                        {
                            "property-name": "EBMS3OutboundSign", 
                            "evaluation": "property-equals", 
                            "value": "off"
                        }
                    ]
                }
            }, 
            "cli-alias": "ebms3-signature-alg", 
            "display": "Signature algorithm", 
            "description": "Sets the algorithm to use to sign the outbound ebMS3 message from this internal partner. The default value is dsa-sha1, which is recommended by the ebMS specification."
        }, 
        {
            "name": "EBMS3OutboundSignatureC14NAlg", 
            "type": {
                "href": "/mgmt/types/default/dmCryptoCanonicalizationAlgorithm"
            }, 
            "/mgmt/types/default/dmCryptoCanonicalizationAlgorithm": {
                "type": {
                    "name": "dmCryptoCanonicalizationAlgorithm", 
                    "display": "Canonicalization Algorithm", 
                    "value-list": {
                        "value": [
                            {
                                "summary": "Inclusive XML Canonicalization, version 1.0 (c14n)", 
                                "display": "XML Canonicalization, version 1.0", 
                                "name": "c14n"
                            }, 
                            {
                                "summary": "Exclusive XML Canonicalization (exc-c14n)", 
                                "display": "Exclusive XML Canonicalization", 
                                "name": "exc-c14n"
                            }, 
                            {
                                "summary": "Inclusive XML Canonicalization, version 1.0, with comments (c14n-comments)", 
                                "display": "XML Canonicalization with Comments, version 1.0", 
                                "name": "c14n-comments"
                            }, 
                            {
                                "summary": "Exclusive XML Canonicalization with comments (exc-c14n-comments)", 
                                "display": "Exclusive XML Canonicalization with Comments", 
                                "name": "exc-c14n-comments"
                            }, 
                            {
                                "summary": "Inclusive XML Canonicalization, version 1.1 (c14n11)", 
                                "display": "XML Canonicalization, version 1.1", 
                                "name": "c14n11"
                            }, 
                            {
                                "summary": "Inclusive XML Canonicalization, version 1.1, with comments (c14n11-comments)", 
                                "display": "XML Canonicalization with Comments, version 1.1", 
                                "name": "c14n11-comments"
                            }
                        ]
                    }, 
                    "description": "The XML canonicalization algorithm and version used for signing."
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmCryptoCanonicalizationAlgorithm"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmCryptoCanonicalizationAlgorithm"
                    }
                }
            }, 
            "summary": "Signature canonicalization algorithm to use before signing outbound message", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }, 
                        {
                            "property-name": "EBMS3OutboundSign", 
                            "evaluation": "property-equals", 
                            "value": "off"
                        }
                    ]
                }
            }, 
            "cli-alias": "ebms3-signature-c14n-alg", 
            "display": "Signature canonicalization method", 
            "description": "Sets the algorithm to use to canonicalize the SOAP Envelope XML and exclude comments before signing outbound ebMS3 message. The default value is exc-c14n, which is recommended by the ebMS specification."
        }, 
        {
            "name": "EBMS3InboundVerifyValCred", 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/CryptoValCred"
                }
            }, 
            "summary": "Validation credentials set", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms3-verify-valcred", 
            "display": "Inbound signature validation credentials", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "Sets the validation credentials set to verify the signature on an inbound ebMS3 message or a receipt from this external partner."
        }, 
        {
            "name": "EBMS3DefaultSignerCert", 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/CryptoCertificate"
                }
            }, 
            "summary": "Default validation certificate to use to verify the signature of inbound message", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms3-default-signer-cert", 
            "display": "Default inbound signature validation certificate", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "Sets the default validation certificate to verify the signature of an inbound ebMS3 message or a receipt. The default signature validation certificate is used when the keyInfo element is missing or the signature method is unsupported."
        }, 
        {
            "name": "EBMS3ReceiptSSLProxy", 
            "required-when": {
                "condition": {
                    "evaluation": "logical-and", 
                    "condition": [
                        {
                            "property-name": "EBMS3ReceiptSSLClientConfigType", 
                            "evaluation": "property-equals", 
                            "value": "proxy"
                        }, 
                        {
                            "evaluation": "logical-or", 
                            "condition": [
                                {
                                    "property-name": "EBMSReceiptURL", 
                                    "evaluation": "property-url-protocol-in-list", 
                                    "value": "https"
                                }, 
                                {
                                    "property-name": "EBMSInboundErrorURL", 
                                    "evaluation": "property-url-protocol-in-list", 
                                    "value": "https"
                                }
                            ]
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }, 
                        {
                            "property-name": "EBMSInboundSendReceipt", 
                            "evaluation": "property-equals", 
                            "value": "on"
                        }, 
                        {
                            "property-name": "EBMSInboundReceiptReplyPattern", 
                            "evaluation": "property-equals", 
                            "value": "Callback"
                        }
                    ]
                }
            }, 
            "summary": "The Receipt/Error TLS proxy profile is deprecated. Use the Receipt/Error TLS client profile.", 
            "cli-alias": "ebms3-receipt-ssl", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "EBMS3ReceiptSSLClientConfigType", 
                            "evaluation": "property-does-not-equal", 
                            "value": "proxy"
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }
                    ]
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/SSLProxyProfile"
                }
            }, 
            "display": "Receipt/Error TLS Proxy Profile (deprecated)", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "When the external partner requests an asynchronous reply, specifies the TLS proxy profile to use to establish a TLS-enabled, secured connection to external partners to send the receipt or error signals. To specify a TLS proxy profile for specific URLs, configure a user agent for the XML manager associated with the gateway."
        }, 
        {
            "name": "EBMS3InboundRequireSigned", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to require a signature", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "ebms3-require-signed", 
            "display": "Require signature", 
            "description": "Indicates whether inbound ebMS3 messages to this internal partner must be signed. The default behavior is off."
        }, 
        {
            "name": "EBMS3InboundRequireEncrypted", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to require encryption", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "ebms3-require-encrypted", 
            "display": "Require encryption", 
            "description": "Indicates whether inbound ebMS3 messages to this internal partner must be encrypted. The default behavior is off."
        }, 
        {
            "name": "EBMS3InboundDecryptIdCred", 
            "required-when": {
                "condition": {
                    "evaluation": "logical-and", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }, 
                        {
                            "property-name": "EBMS3InboundRequireEncrypted", 
                            "evaluation": "property-equals", 
                            "value": "on"
                        }
                    ]
                }
            }, 
            "summary": "Identification credentials set for decryption", 
            "cli-alias": "ebms3-decrypt-idcred", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/CryptoIdentCred"
                }
            }, 
            "display": "Inbound decryption identification credentials", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "When encryption is required, set the identification credentials to decrypt inbound ebMS3 messages."
        }, 
        {
            "name": "EBMS3InboundRequireCompressed", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to require compression", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "ebms3-require-compressed", 
            "display": "Require compression", 
            "description": "Indicates whether the internal partner requires the inbound ebMS3 messages to be compressed. The default behavior is not to require compression."
        }, 
        {
            "name": "EBMS3ReceiptSSLClientConfigType", 
            "/mgmt/types/default/dmSSLClientConfigType": {
                "type": {
                    "name": "dmSSLClientConfigType", 
                    "value-list": {
                        "value": [
                            {
                                "name": "proxy", 
                                "display": "Proxy Profile"
                            }, 
                            {
                                "name": "client", 
                                "display": "Client Profile"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmSSLClientConfigType"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmSSLClientConfigType"
                    }
                }
            }, 
            "default": "proxy", 
            "type": {
                "href": "/mgmt/types/default/dmSSLClientConfigType"
            }, 
            "summary": "TLS profile type for the secure connection to send the receipt or error signals", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms3-receipt-ssl-client-type", 
            "display": "Receipt/Error TLS client type", 
            "description": "When the external partner requests an asynchronous reply, sets the TLS profile type for the secure connection to send the receipt or error signals."
        }, 
        {
            "name": "EBMS3ReceiptSSLClient", 
            "required-when": {
                "condition": {
                    "evaluation": "logical-and", 
                    "condition": [
                        {
                            "property-name": "EBMS3ReceiptSSLClientConfigType", 
                            "evaluation": "property-equals", 
                            "value": "client"
                        }, 
                        {
                            "evaluation": "logical-or", 
                            "condition": [
                                {
                                    "property-name": "EBMSReceiptURL", 
                                    "evaluation": "property-url-protocol-in-list", 
                                    "value": "https"
                                }, 
                                {
                                    "property-name": "EBMSInboundErrorURL", 
                                    "evaluation": "property-url-protocol-in-list", 
                                    "value": "https"
                                }
                            ]
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }, 
                        {
                            "property-name": "EBMSInboundSendReceipt", 
                            "evaluation": "property-equals", 
                            "value": "on"
                        }, 
                        {
                            "property-name": "EBMSInboundReceiptReplyPattern", 
                            "evaluation": "property-equals", 
                            "value": "Callback"
                        }
                    ]
                }
            }, 
            "summary": "TLS client profile for the secure connection to send the receipt or error signals", 
            "cli-alias": "ebms3-receipt-ssl-client", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "EBMS3ReceiptSSLClientConfigType", 
                            "evaluation": "property-does-not-equal", 
                            "value": "client"
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }
                    ]
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/SSLClientProfile"
                }
            }, 
            "display": "Receipt/Error TLS client profile", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "When the external partner requests an asynchronous reply, specifies the TLS client profile for the secure connection to send the receipt or error signals."
        }, 
        {
            "name": "EBMSNotification", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to enable notification", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "ebms-notification", 
            "display": "Enable notification", 
            "description": "When enabled, send notifications to the message producer or consumer when there are specific errors. The default behavior is off."
        }, 
        {
            "type": {
                "href": "/mgmt/types/default/dmURL"
            }, 
            "name": "EBMSNotificationURL", 
            "required-when": {
                "condition": {
                    "property-name": "EBMSNotification", 
                    "evaluation": "property-equals", 
                    "value": "on"
                }
            }, 
            "locations": {
                "location": "\"NONE\""
            }, 
            "summary": "Notification URL", 
            "/mgmt/types/default/dmURL": {
                "type": {
                    "cli-arg": "url", 
                    "name": "dmURL"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmURL"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmURL"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "external"
                }
            }, 
            "cli-alias": "ebms-notification-url", 
            "display": "Notification URL", 
            "protocols": {
                "protocol": [
                    "http", 
                    "https"
                ]
            }, 
            "description": "Speficies the destination URL to send the notifications to."
        }, 
        {
            "name": "EBMSNotificationSSLClientConfigType", 
            "/mgmt/types/default/dmSSLClientConfigType": {
                "type": {
                    "name": "dmSSLClientConfigType", 
                    "value-list": {
                        "value": [
                            {
                                "name": "proxy", 
                                "display": "Proxy Profile"
                            }, 
                            {
                                "name": "client", 
                                "display": "Client Profile"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmSSLClientConfigType"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmSSLClientConfigType"
                    }
                }
            }, 
            "default": "proxy", 
            "type": {
                "href": "/mgmt/types/default/dmSSLClientConfigType"
            }, 
            "summary": "TLS profile type to secure the connection to send notifications to the message producer or message consumer.", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }, 
                        {
                            "property-name": "EBMSNotificationURL", 
                            "evaluation": "property-url-protocol-not-in-list", 
                            "value": "https"
                        }
                    ]
                }
            }, 
            "cli-alias": "ebms-notification-ssl-client-type", 
            "display": "Notification TLS client type", 
            "description": "When the message producer or consumer requests the notifications for specific errors, specifies the TLS profile type for the secure connection to send the notifications."
        }, 
        {
            "name": "EBMSNotificationSSLProxy", 
            "required-when": {
                "condition": {
                    "evaluation": "logical-and", 
                    "condition": [
                        {
                            "property-name": "EBMSNotificationSSLClientConfigType", 
                            "evaluation": "property-equals", 
                            "value": "proxy"
                        }, 
                        {
                            "property-name": "EBMSNotificationURL", 
                            "evaluation": "property-url-protocol-in-list", 
                            "value": "https"
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }, 
                        {
                            "property-name": "EBMSNotification", 
                            "evaluation": "property-equals", 
                            "value": "on"
                        }
                    ]
                }
            }, 
            "summary": "The Notification TLS proxy profile is deprecated. Use the Notification TLS client profile.", 
            "cli-alias": "ebms-notification-ssl", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "EBMSNotificationSSLClientConfigType", 
                            "evaluation": "property-does-not-equal", 
                            "value": "proxy"
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }, 
                        {
                            "property-name": "EBMSNotificationURL", 
                            "evaluation": "property-url-protocol-not-in-list", 
                            "value": "https"
                        }
                    ]
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/SSLProxyProfile"
                }
            }, 
            "display": "Notification TLS Proxy Profile (deprecated)", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "When the message producer or consumer requests the notifications for specific errors, specifies the TLS proxy profile to use to secure the connection to send the notifications. To specify a TLS proxy profile for specific URLs, configure a user agent for the XML manager that is associated with the B2B Gateway."
        }, 
        {
            "name": "EBMSNotificationSSLClient", 
            "required-when": {
                "condition": {
                    "evaluation": "logical-and", 
                    "condition": [
                        {
                            "property-name": "EBMSNotificationSSLClientConfigType", 
                            "evaluation": "property-equals", 
                            "value": "client"
                        }, 
                        {
                            "property-name": "EBMSNotificationURL", 
                            "evaluation": "property-url-protocol-in-list", 
                            "value": "https"
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "internal"
                        }, 
                        {
                            "property-name": "EBMSNotification", 
                            "evaluation": "property-equals", 
                            "value": "on"
                        }
                    ]
                }
            }, 
            "summary": "TLS client profile to secure the connection to send the notifications.", 
            "cli-alias": "ebms-notification-ssl-client", 
            "ignored-when": {
                "condition": {
                    "evaluation": "logical-or", 
                    "condition": [
                        {
                            "property-name": "EBMSNotificationSSLClientConfigType", 
                            "evaluation": "property-does-not-equal", 
                            "value": "client"
                        }, 
                        {
                            "property-name": "ProfileType", 
                            "evaluation": "property-equals", 
                            "value": "external"
                        }, 
                        {
                            "property-name": "EBMSNotificationURL", 
                            "evaluation": "property-url-protocol-not-in-list", 
                            "value": "https"
                        }
                    ]
                }
            }, 
            "type": {
                "href": "/mgmt/types/default/dmReference", 
                "reference-to": {
                    "href": "/mgmt/metadata/default/SSLClientProfile"
                }
            }, 
            "display": "Notification TLS client profile", 
            "/mgmt/types/default/dmReference": {
                "type": {
                    "cli-arg": "object", 
                    "name": "dmReference"
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                }
            }, 
            "description": "When the message producer or consumer requests the notifications for specific errors, specifies the TLS client profile to use to establish a TLS-enabled connection to the message producer or consumer to send the notifications."
        }, 
        {
            "/mgmt/types/default/dmAllowDuplicateMessage": {
                "type": {
                    "name": "dmAllowDuplicateMessage", 
                    "value-list": {
                        "value": [
                            {
                                "summary": "Never allow or reprocess a duplicate message.", 
                                "display": "Never", 
                                "name": "never"
                            }, 
                            {
                                "summary": "Always allow and reprocess a duplicate message. The DataPower Gateway uses a new record for the reprocessed transaction instead of updating the record for the previous transaction.", 
                                "display": "Always", 
                                "name": "always"
                            }, 
                            {
                                "summary": "Allow and reprocess a duplicate message only when an error occurs during the previous transaction. The error excludes failures in sending asynchronous MDN, ACK, or Receipt.", 
                                "display": "On error", 
                                "name": "on-error"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmAllowDuplicateMessage"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmAllowDuplicateMessage"
                    }
                }
            }, 
            "name": "EBMS3AllowDuplicateMessage", 
            "default": "never", 
            "type": {
                "href": "/mgmt/types/default/dmAllowDuplicateMessage"
            }, 
            "summary": "When to allow and reprocess duplicate ebMS3 inbound messages", 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms3-allow-dup-msg", 
            "display": "Allow duplicate ebMS3 inbound message", 
            "description": "Controls when to allow and reprocess duplicate ebMS3 inbound messages. The default behavior is never. This option does not apply to the receipt signal messages."
        }, 
        {
            "name": "EBMS3DuplicateDetectionNotification", 
            "default": "off", 
            "type": {
                "href": "/mgmt/types/default/dmToggle"
            }, 
            "summary": "Whether to enable duplicate detection notification", 
            "/mgmt/types/default/dmToggle": {
                "type": {
                    "cli-arg": "on | off", 
                    "name": "dmToggle", 
                    "value-list": {
                        "value": [
                            {
                                "name": "on", 
                                "display": "on"
                            }, 
                            {
                                "name": "off", 
                                "display": "off"
                            }
                        ]
                    }
                }, 
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    }, 
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                }
            }, 
            "ignored-when": {
                "condition": {
                    "property-name": "ProfileType", 
                    "evaluation": "property-equals", 
                    "value": "internal"
                }
            }, 
            "cli-alias": "ebms3-duplicate-detection-notification", 
            "display": "Duplicate detection notification", 
            "description": "When enabled, send notification to the message consumer when the DataPower Gateway detects duplicate messages. The default behavior is off."
        }
    ]
}